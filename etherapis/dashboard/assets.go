// Code generated by go-bindata.
// sources:
// assets/components/ethereum.js
// assets/components/market.js
// assets/components/provider.js
// assets/components/subscriber.js
// assets/components/tutorial.js
// assets/dashboard.js
// assets/index.html
// DO NOT EDIT!

package dashboard

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentsEthereumJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x51\x6f\xdb\x36\x10\x7e\xf7\xaf\x20\x0c\x0c\xb3\xd7\x58\x4e\x07\x74\x0f\x49\x9c\x61\xeb\x06\x34\xc0\x5a\x04\x6d\xf7\x54\xf4\x81\x96\xe8\x98\x8d\x44\x6a\x24\x65\x27\x0b\xfc\xdf\xf7\x1d\x49\xc9\x92\x22\x27\x6e\xf7\xd0\x3c\xc4\x26\x75\xf7\xf1\xee\xbb\xe3\xdd\xc9\xf3\x39\xfb\xd3\xad\x85\x11\x55\xf1\xc1\x71\x67\x99\xb4\x8c\xb3\xbf\xaf\x58\xaa\x8b\x52\x2b\xa1\x1c\x73\x6b\xee\x58\x26\x6d\x99\xf3\x7b\x8b\x95\x60\x22\x6a\x30\x25\xdc\x56\x9b\x5b\x66\xa1\x5a\x41\x57\xad\xb4\x1d\x01\x52\x2b\x2f\x57\x70\xa9\x98\xe2\x1b\x79\xc3\x9d\xc4\xde\x92\x9b\x84\x5d\x39\x96\x4b\xeb\x02\x92\xaa\x0a\x61\x98\x5e\xe1\x38\xa5\x44\xea\x44\xc6\x4a\x21\x8c\x3d\xf1\x4f\xd3\xca\x18\x58\x40\x88\xcb\x5c\xa7\xb7\x24\xbe\x84\x3c\x57\x99\x7f\xce\x8d\x91\x1b\x9e\x33\x27\x0b\x41\x20\xb4\x97\x73\xeb\x82\x74\x02\x3d\x52\xbd\x36\xba\x14\xc6\x49\x61\xcf\x68\xc9\x18\xff\xc2\xef\xce\xf0\xc9\x7e\xbb\xbe\x62\x46\xfc\x53\x09\xeb\x80\xda\xfc\xcd\xd8\xaa\x52\xe9\xa4\x32\x39\x1c\x33\x52\xdd\x9c\x30\x5b\xa5\xa9\xb0\x36\x3c\xc8\xb8\xe3\xec\x8b\xd5\x2a\x79\xcf\xb7\x6f\xb1\xcd\x6f\xc4\x74\x1a\xb1\x4b\x09\xbd\xb3\x80\xdd\xf0\x24\x54\x56\x6a\x09\x2e\x81\x1d\x20\x83\xb4\x11\x2b\x23\xec\xfa\x8c\x05\xee\xe3\x12\x3c\xc2\x1e\x72\x6c\x16\x5c\x03\x8b\x85\xcc\xc1\x9a\x00\x4d\x99\x1d\x6d\xb8\xe9\x45\x6d\xc1\xde\x0b\x9e\xba\x24\x35\x82\x3b\xf1\x1a\x24\xd8\xc9\xc3\x88\x31\x9c\x72\x23\xdc\x95\x92\x4e\xf2\x9c\x44\x05\xb3\x22\x72\xff\xaf\x30\x9a\xe1\x14\xb8\x5f\x93\xd7\x04\x3d\x81\x6e\x4f\xf1\xcc\x3b\x4f\x71\x9c\x4c\x19\x61\x93\xf9\xae\x32\x2a\x2e\x18\xb3\xf7\x2a\x85\x6b\x10\xe4\xb9\x15\x27\x71\xd7\xc7\x93\xe8\xfe\xf4\xb9\xde\x5a\x0b\x9e\xf9\x00\xa8\x2a\xcf\xc3\xe6\xee\x1c\x1f\xbb\x93\x60\x72\x63\xc6\x1f\x32\x7b\xab\x2b\xf0\x26\x29\xb9\x36\xfa\x16\xf9\xb1\x5d\x8b\x90\x5d\x31\xe9\xf6\x89\xba\x92\x4a\xda\x35\xbc\xc9\x35\xcf\x60\x08\xe5\x5a\x00\x84\xa8\x89\x5e\x23\x15\xa4\xce\x64\x0a\x76\x6b\xba\xe1\xbc\xa4\xcc\x27\xd6\x15\xcf\x3d\xb0\x40\xb2\x5a\x9c\x16\x33\x79\xc9\xd3\x5b\x04\x91\xa2\x4a\xd4\x3c\x32\x70\x80\x1c\xb7\x96\x36\x89\x47\x7c\x08\xcc\x4c\xa6\xe7\x44\xff\x55\x0c\xef\x64\x40\xe4\x24\xe8\x95\xc8\xd9\xe6\xd1\xf4\xfc\x11\xe0\x35\x91\xfa\x14\xdc\x75\x7d\x8b\x8e\x00\x7b\x83\x70\x3c\x85\x45\xcf\x0f\x42\xd5\x31\xeb\xba\x41\xa9\x61\xa4\xd8\x88\x40\x3a\x65\x46\x8c\xd7\x1c\x10\x37\x86\xee\x52\xcc\xb9\x3a\x91\x59\x9a\xcb\x98\x79\x5d\xac\x43\xdc\x06\x5b\xe8\x32\x4f\xda\x6b\x7f\x01\xd9\x0b\x36\x9e\xc7\x7c\x1c\x9f\xec\x01\xe2\x16\x70\x02\x06\x5c\xf6\xc9\x3d\x79\x68\x92\x37\x7e\xd9\x81\x90\x5d\xb2\x94\x2a\xf3\xe8\xd3\x21\x67\x3d\xc9\x3d\x57\xa9\xb6\x0d\x14\x34\x5f\xb3\xa4\xfa\x82\x2d\x2f\x57\x50\xba\xe9\x80\xe6\xd5\x74\xda\x64\xde\x4a\x1b\x14\x9c\xe5\x6c\x9f\xd9\x3e\x35\x4b\x1c\xe4\xeb\x68\x8b\xa2\xeb\x70\xb9\xbe\x91\x20\x6f\x59\x9b\x1e\xaa\x6c\x03\xdc\xc4\x2b\x4c\x4f\x8f\xa1\x85\xf2\xa5\xc7\x4a\xac\xe4\xfe\xe6\xc7\x5a\xde\x0f\xbf\xdf\x4d\xd7\x68\x19\x2d\xff\xde\xf8\x4a\xf1\x8d\xee\xd1\x61\x6d\xef\x68\x3d\xe0\x5d\xa8\x46\xf4\xff\x19\xe7\x54\x86\x2e\xb1\xca\xb9\x73\x42\xd9\xae\xf1\x36\xf4\x4e\x84\x94\x7a\xa7\x11\xa5\x36\xc8\x82\xa5\x0f\x77\x70\x87\x94\x0f\x97\xd0\x49\xac\x8c\x17\x99\xdc\xe0\x22\xa0\x7c\xbf\xe3\x85\x58\x8c\xd1\x3c\xd1\x34\x67\x12\xb9\x64\xc6\x38\xe5\x3e\x17\x8b\x07\x58\x2c\x6f\xd6\xa8\x39\xe3\x57\xa7\xe5\xdd\x78\xb7\xbb\x1c\xd5\xad\xeb\x80\xbe\x21\xf9\xf1\x5e\x0c\x82\x94\x39\xaf\xa9\x74\xc1\x27\x1f\xdf\xc5\x43\xe0\x85\x48\x49\xfc\xce\x6e\xde\xd1\xf8\x9d\x02\xf4\x2e\x74\x60\x1f\xac\x8e\x86\xe7\x6f\x40\xe1\xa3\x2c\x8e\x92\xbf\x98\xc3\xf4\xd6\x92\x2e\xff\x75\x5d\x2a\xe2\x9d\xec\x00\xd4\xf7\xd4\x47\xee\x09\xe8\x16\x70\x88\xe7\x08\x61\x1e\x6d\x11\x64\xbd\x4d\xfa\x5d\xb4\xbb\xa6\xe1\xe8\xae\xd4\x56\x74\x9b\xe3\x88\x9a\x77\xc7\xbe\x63\x86\xa6\xfa\x0a\xb4\x6a\x61\xbc\x03\xa3\xd6\x10\xc6\x94\xce\x30\xd8\x10\x5e\x53\x28\x11\x41\x1a\x01\xfc\xbc\xe4\xe3\x99\xb0\x8f\xbe\x27\x19\x3a\x58\xab\xfc\xbe\x3e\x09\xd5\x46\xae\x46\xa1\xa4\x18\xf1\x23\x50\x52\x57\xf1\x1c\x02\x3c\x9c\x0b\x98\x1a\xf6\xe0\x78\xd4\x54\xc2\x7d\x76\xc7\xa2\x5e\xab\x06\xb9\xa6\x8b\xbf\xd9\x5f\xea\x09\x2e\x40\x26\x52\x09\x1f\x24\xba\x6a\x18\x1f\xc2\xd1\x28\x6a\x4a\xbb\xa9\x1f\x5e\x3a\xe4\x1d\x9a\x5d\x0e\xde\x19\x20\xb7\x6f\x7c\x6d\xdd\x62\x11\x06\x8f\x69\x33\x90\xc4\xcb\x45\x53\x46\xe8\x7a\x3b\xff\x9f\x2c\xf0\x13\x01\xbe\x2f\x58\xc9\x8d\x15\xe8\x7b\x03\x90\x89\x97\xc2\x17\x9f\xc9\x27\xec\xe5\x2f\xb1\x7b\x12\x42\xb8\x84\xcf\x21\xac\x21\x84\xf1\x72\x08\xa0\x4e\x88\xa7\x01\xa2\xd4\x10\x40\x09\xbf\x10\xf1\x67\x00\x82\x94\xaf\x75\xd6\x03\x34\xfa\xb7\x4a\x6f\xd5\xb3\x1c\x78\xa9\x96\xfa\xf9\x68\x6f\xc0\x3e\x84\x2f\x4f\x4f\xd9\x4f\x6c\x52\xfb\x34\x0b\x04\x4f\xd9\x9c\x4d\x22\x51\xf5\x56\x4b\x3f\xe7\x4b\x91\x43\x79\x4c\xf9\x80\x72\x36\x14\x5d\xca\xb2\x24\xce\xfd\x88\xf0\xe9\x3e\xba\x8d\xf6\x55\x2b\xcd\x6a\x94\x5d\x83\x15\xbc\x9c\xd5\x6c\x5d\x3e\x86\x78\xb1\x68\x19\x19\x3d\x98\x52\x07\x09\x49\x0d\xb7\xc7\x58\xf5\x80\xbc\xc0\x9c\x1e\x84\x7d\x12\xf7\xe5\x07\xe3\xa7\x58\xb9\x71\x4c\x38\x26\x90\x91\x5f\x79\x5e\x07\xe0\x60\x97\xa8\x9b\x41\xc9\x33\x1a\x76\x3f\xea\x12\xbe\xbf\x7c\xf5\x4c\x43\xa8\x43\xb6\x6f\x26\xa8\x6f\x92\xae\x17\xb4\x8d\x40\x73\x93\x1b\x81\xa6\xd9\xb4\x98\x9f\xfb\x2d\xe6\x30\xe6\x6c\xd9\xca\x09\x5a\xcc\xe8\x5d\xa7\x04\xe9\xb8\xde\x04\xcb\x8c\xce\x5b\xf2\x90\xd8\x9b\xb1\x95\x99\xc3\x8b\x50\x93\x52\xa0\xe3\x87\xde\xb9\x38\xd9\x96\x5c\x0d\x59\xce\x97\x56\xe7\x95\x23\xcb\x63\x29\xc4\xa6\x67\x13\x3b\x11\x7a\x8c\x1c\xf5\x90\x17\xb6\x40\x4d\xbc\x7c\xf0\xd1\xd8\x5d\xcc\xc3\x12\x9f\x00\xef\xf8\xd9\x6b\x49\xed\xe5\x70\x57\xf1\xf5\xb4\xd5\x58\x8f\xe9\x0b\x31\xb7\xd1\x0a\x9a\x7a\x1b\x26\xc6\xad\x6f\x0c\xdc\x34\xad\x03\x65\x7c\x3f\x55\x3a\x7d\xb0\x80\xc7\x71\xed\xaf\x38\x89\xd2\xd2\xcf\x6e\xc8\xb6\x4f\x9f\xc9\x3c\x5f\x83\xdb\x76\x7e\x75\x09\xee\x27\xa4\x8f\xcb\xe3\xb9\xc3\x89\xbb\xf6\xd8\x71\x21\xdb\x32\x2b\x8e\x7a\x3d\x33\xc8\x45\x70\x2f\x2f\xd9\x43\xeb\xd6\x7b\x17\x92\x5c\xa8\x1b\xb7\xde\x05\x87\x1a\xe2\xf7\x61\xea\x31\xdf\x1e\x50\xbe\xa6\x23\x77\x47\xd0\x18\x90\x83\xec\x7a\xa1\xb3\xbe\x12\xf5\xbd\x80\xdd\x0b\xea\x2c\x98\xe5\x29\x6f\x1b\xf8\x1d\x29\xa7\x5c\xa0\xb7\xdb\x01\xde\x83\x33\xbf\x0e\x36\x84\xf0\xa3\x4a\xf0\xcc\x77\x02\x76\xc6\x4e\x77\xb1\x66\x1d\x19\x9d\x30\x0d\x1e\x13\x1c\xff\xc3\x07\xea\x51\x49\x6f\xe1\x56\xaa\x14\x6f\x91\x64\x96\x93\x29\x26\x1a\x6e\x3a\x43\x53\x30\x7b\x8b\xb1\xa9\x90\x4a\x64\xff\x2f\x76\xf5\xa1\xde\x82\x70\xf2\xa3\x20\x06\x3f\xbe\x63\x0c\x53\xb2\x62\xa6\x9f\x08\x61\xa1\x0b\x7a\x9d\xae\x94\xbc\x7b\x1c\x45\xf2\x0d\xdd\xaa\x28\xa7\xc9\xca\xe8\xe2\x9d\xde\x4e\x28\x9c\x63\x85\x37\x36\xe3\x1b\xa9\xc8\xc6\xbb\xa7\x83\xfa\x5f\x00\x00\x00\xff\xff\x1d\x4c\x6d\x63\x3b\x14\x00\x00")

func componentsEthereumJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsEthereumJs,
		"components/ethereum.js",
	)
}

func componentsEthereumJs() (*asset, error) {
	bytes, err := componentsEthereumJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/ethereum.js", size: 5179, mode: os.FileMode(436), modTime: time.Unix(1455291359, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsMarketJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\x3f\x4f\xc3\x30\x10\xc5\x77\x7f\x8a\x53\xa6\x54\xa2\xee\xd0\xad\xb4\x95\x10\x13\x03\xa8\x62\x63\x3c\xe2\x0b\x3e\x61\xec\xc8\x3e\x37\xaa\x50\xbf\x3b\x49\x08\xc8\x08\x50\x17\xff\x79\xfe\xf9\x3d\xdd\xdd\x11\x23\xdc\x63\x7c\x25\x81\x1d\x3c\x12\x36\xa2\x9b\x48\x28\x74\xeb\x30\xa5\xfa\x5d\x01\x44\xf2\x86\xe2\x06\xda\xec\x1b\xe1\xe0\xeb\x05\x8c\x32\x00\xb7\x50\x8b\xe5\xa4\xbb\x18\xba\xa4\x2d\x1b\xfa\x7a\x1a\x7f\x49\x8e\x1e\x7c\x76\x6e\x52\xce\xaa\x50\xeb\x19\xda\x1a\x3e\x42\x33\x26\x3d\xe0\x1b\xed\xaa\x0e\x3d\x39\x98\xd6\xa5\xa1\x16\xb3\x93\x6a\x3f\xb3\xff\xd0\x4b\x4b\x68\xd8\xbf\x14\xdc\x40\xda\xf5\x6f\x50\x58\x1c\x55\xfb\x9b\xc3\xdd\x5c\xf1\x76\x65\xd7\x85\xfb\x6a\xb0\xbf\x14\xf6\x1c\xcc\xe9\x47\xd2\x13\xa1\xbd\x82\x53\xc8\xd0\x73\xb2\x5a\x6b\xd8\x1c\xfe\xb6\x2c\x2e\x8b\x6b\x35\x36\xe4\x3c\xec\xaa\x67\x6f\x42\xaf\xbf\x67\xf0\x79\x50\x1f\x01\x00\x00\xff\xff\x59\x79\xb7\xe1\x98\x01\x00\x00")

func componentsMarketJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsMarketJs,
		"components/market.js",
	)
}

func componentsMarketJs() (*asset, error) {
	bytes, err := componentsMarketJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/market.js", size: 408, mode: os.FileMode(436), modTime: time.Unix(1455279554, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsProviderJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x51\x6f\xe3\x36\x0c\x7e\xcf\xaf\x20\xfc\xb2\x1e\xb0\x3a\x8e\x9d\x5c\xea\x2e\xd7\x61\x18\x6e\xc3\x80\x61\x2d\xd6\x61\xef\xb2\x4c\xc5\x02\x1c\xc9\x93\xe4\xa4\xc1\x21\xff\x7d\x94\xdd\xeb\x25\x8e\x13\xa7\x45\xf7\xb0\x97\x44\x24\x3f\xd2\xf4\xf7\x51\x92\xc7\x63\x78\x30\x7a\x2d\x73\x34\x20\x2d\xb8\x02\x81\x6b\xe5\x50\x39\xa8\xd8\x12\xc9\xc1\x1c\xe4\xd2\x56\x25\xdb\x5a\xb0\x8e\x39\x0b\x2c\xd3\xb5\x6b\xa0\xb5\x45\x63\x81\xd7\xc6\x50\xc2\x88\x6a\x55\x6d\xad\x1c\x7e\x7a\xf8\xcd\x7e\xef\xcd\x27\x89\xb4\xa0\x9a\x42\x2e\x6b\xc3\x9c\xd4\x8a\x6c\x74\x3c\x1c\xad\x99\xf9\xf6\xf0\x4f\xf0\x27\x32\xee\x42\x6e\x90\x39\xfc\xb9\x64\xd6\x5e\x7d\x19\x01\x50\x65\x0a\xdf\x82\xa8\x15\xf7\xc9\x57\x1f\xc0\xbb\x01\xe8\x69\x8f\x85\x36\x0e\xb8\x34\xbc\x96\xee\x19\x29\xd5\x12\xa4\x80\x0d\x7e\x67\x10\x94\x76\xa0\x55\xd3\xaa\xab\x9d\x36\x92\x95\xcd\x6b\x35\x05\x08\x75\xe5\x0a\x69\x43\xea\xb2\xb2\x61\x41\x6d\x7c\xad\xed\x1f\xeb\x6a\xa3\x40\xd5\x65\xd9\x78\x76\xa3\x3d\xef\xd5\x33\x68\x91\xcb\xf5\xdd\xf3\xba\xb5\x80\xfb\xc6\xff\x60\x2b\xfc\x14\x18\xbd\x09\xbe\x45\x8f\xe3\x5c\x97\xd7\xe5\xf2\x7a\x12\x1f\xa0\x08\xf7\xd0\xb2\x36\xee\xb8\xff\x66\x75\xe9\x0e\x9c\x8b\xf1\x61\x03\xfb\xe6\x9e\xf1\xe1\x87\x91\x7f\x81\x1d\xfd\x6f\xa4\xca\xf5\x26\xdc\x63\xfd\x65\x49\x7c\x7e\x7e\xaa\xb4\xc5\xe7\x21\x58\x55\x5a\x79\x55\xbf\xca\xf4\xb4\x7d\xbd\x46\x3d\x7c\xf5\x30\x30\x0d\x4e\x92\xf8\x65\x4f\x20\xad\x4a\xa9\x10\x7e\x84\xa0\x62\x0a\xbd\x90\xf4\x7b\x6d\x6b\xce\xd1\xda\x00\x6e\x0f\xfd\x39\x0a\xcf\x57\xb0\x3b\x27\x41\x0b\x2d\x90\xe5\x34\x36\x5d\x19\x8a\xe4\x18\xea\xa4\x2b\x31\xb8\xdb\x6f\x4b\x51\x78\x77\x0b\xfd\x9d\xde\x37\xab\xa6\xb9\x7b\x21\x9a\xf5\x6e\x31\x2e\x92\x33\x2a\x9e\xea\x32\xd3\xf9\xb6\xd3\x62\xab\x4a\xbb\x29\x97\x1a\x0a\x34\x18\x86\xe1\x1b\x06\xe4\x65\x3e\x5e\xc4\xa6\xf9\x7b\x17\xb9\xff\x83\xed\x41\xec\x3d\xb0\xed\xaa\x39\xa2\xda\x4e\x07\x18\xed\x9a\x43\x8d\xb4\xb4\xaa\x66\xfe\x82\x5f\x51\x97\x9a\x33\x3a\x3c\x20\xc7\x95\x0e\x76\xd0\xaa\x4b\xa3\x69\x6a\xdc\x8d\x4f\x67\x3e\x3a\xe2\x6d\x85\x47\x79\x82\x95\xf6\x20\xf1\x42\x59\x9a\xfd\xff\x3f\x10\x65\xed\xfb\xec\x4a\x72\x62\xaa\x3b\x9b\xf5\x30\xe3\x15\x3b\xa1\x01\x3b\x96\x95\xb8\x0f\x6f\x1d\xcd\xef\xb5\x75\x46\x56\x74\x31\xb5\x56\xa1\xd7\x24\x4c\x4f\x11\x5f\xc6\x9f\x07\x7d\x11\x1f\x33\xfd\x81\x26\xed\xee\x11\xcd\x5a\x72\x5c\x8c\x69\x7d\x0e\x56\x67\x96\x1b\x99\xa1\x19\x42\xde\x6f\x30\x1f\xc2\xfc\x2e\x57\xd2\x0d\x81\xfe\xd2\xae\xb9\xfa\xe4\x70\x39\x66\xfd\x55\xfa\x4f\x8d\xf6\x4c\x55\x8a\xf4\x32\xe1\x33\x4e\xb0\xb7\x70\x5e\xb7\x37\xf0\x9a\xdf\x75\xf6\x20\x3d\xe4\x84\x3e\x2d\x3c\x7a\x4a\xd2\x28\x61\xb3\x19\x46\x37\x51\x2c\xa2\xc9\x24\x9a\xcf\xb3\x2c\x49\x92\x9b\xf8\x26\x8e\xd3\x64\x9e\xa7\x53\x14\xd9\x5c\x0c\x55\x4a\x26\x53\xf8\x45\x2a\x85\xdb\x21\xe4\x2c\x8a\x2e\x44\x4e\xc2\x09\x7c\x26\x96\xcc\x60\x49\x58\x49\x55\x3b\x3a\x88\xd9\xf2\xcc\x3b\x9f\x92\xe2\xfd\x59\x4d\x05\xff\x28\x50\xe4\x73\x91\x24\x9c\xc5\x29\xe2\x64\x2e\xe2\x4c\x20\x4f\xa7\xd3\x8f\xe9\x0c\x67\x22\x4e\x39\x1b\x64\xf5\x62\x06\x26\xd1\xa5\xb8\x0b\x0b\x32\x10\xb8\x01\x8b\xf4\x39\x9a\xbf\x91\x56\xf2\xf7\xcf\x31\x05\xfc\xd1\x72\x74\x84\x75\x6f\xf7\xbe\x0b\xff\xd5\xdf\x71\xff\x06\x00\x00\xff\xff\x0e\x3e\xf0\xe5\xb7\x0b\x00\x00")

func componentsProviderJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsProviderJs,
		"components/provider.js",
	)
}

func componentsProviderJs() (*asset, error) {
	bytes, err := componentsProviderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/provider.js", size: 2999, mode: os.FileMode(436), modTime: time.Unix(1455282047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsSubscriberJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x52\xbd\x6e\xe3\x30\x0c\xde\xfd\x14\xbc\x2c\xe7\x0c\xb1\x71\x77\xdb\x35\xc9\x52\x74\x6c\x87\xf6\x09\x14\x99\x89\x05\x28\xa2\x40\x52\x71\x83\x22\xef\x5e\xc9\x71\x51\x1b\x9d\xec\xef\xc7\xdf\x47\xd1\x6a\x5b\x78\x4b\x07\xb1\xec\x0e\xc8\xe0\x04\xb4\x47\xb0\x14\x14\x83\x42\x34\x27\xcc\x84\x51\xe8\x9c\x44\x6f\xae\x02\xa2\x46\x05\xcc\x81\x92\x8e\xd6\x24\xc8\x02\x36\x31\xe7\x0f\xaa\x9c\x26\xf7\xb4\xa8\x8e\x42\x36\x86\x0e\x8c\xf7\x34\x08\x5c\x0c\x3b\x4a\x02\x14\x91\xcd\x5d\xa5\x50\x32\xce\x4d\x95\xb5\xf9\x18\x3b\x78\x45\x63\xb5\xb1\x8c\x46\xf1\xd1\x1b\x91\xfa\xa3\x02\xc8\x1d\x1d\xf2\x7f\x38\xa6\x60\x4b\x42\xbd\x86\x42\x03\x94\x53\xf4\xc4\x0a\xd6\xb1\x4d\x4e\x27\xa7\x0b\x27\x70\x47\x18\xf0\x37\x23\x04\xd2\xa9\x10\x34\x29\xb1\x33\x7e\x3c\xe0\x18\x90\x5d\xb5\xf6\x4e\x9a\xc8\x14\xa5\xe9\x5d\x87\x5f\xd9\xa5\x56\x13\x07\x08\xc9\xfb\x91\xb9\x55\x33\xb6\x9e\x4c\xdb\xce\x5d\xf6\xd3\xfb\x1d\x81\x2d\x83\xbf\x98\x33\xee\x56\x4c\xc3\xea\x5b\xfd\xa9\x5b\xf2\x1b\x7f\xda\xfc\xf9\xbb\x70\x65\x5f\xff\x6f\xff\x7c\x5d\x2e\xf5\xd7\xb6\xcd\xec\x3c\xac\x5d\x76\xcf\xe1\x0c\xac\x1f\xaa\x32\xfb\x2d\x3f\x07\x17\x3a\x1a\x9a\xc5\xca\x67\x20\xaf\xf3\xe9\x3d\x92\xe0\x74\x1b\xce\x91\x42\xf9\xbd\x9f\x01\x00\x00\xff\xff\x1e\x66\x5a\x2c\x2d\x02\x00\x00")

func componentsSubscriberJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsSubscriberJs,
		"components/subscriber.js",
	)
}

func componentsSubscriberJs() (*asset, error) {
	bytes, err := componentsSubscriberJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/subscriber.js", size: 557, mode: os.FileMode(436), modTime: time.Unix(1455281939, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsTutorialJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x53\x4f\x6f\xdb\x3e\x0c\xbd\xfb\x53\xf0\xd7\xcb\x2f\x05\x5a\x07\xdb\x6e\x5d\xdb\x61\x7f\x7a\xc8\x65\x18\xb6\x0e\x3b\x2b\x16\x1d\x11\x53\x44\x43\xa4\xeb\x06\x43\xbf\xfb\xa8\xd8\x69\x6c\xec\x14\x89\x7c\x79\x7c\x7a\x7c\x5e\xaf\xe1\xb1\x57\xce\xe4\x22\x90\x80\x06\x84\x86\x93\x62\x52\xe8\xdc\x0e\xad\xe0\x14\xf0\xb9\x8b\x8e\xd2\xd8\x7e\x72\x99\xb8\x17\x83\xed\x3b\x4e\x06\x14\xe0\xf6\xd8\x91\x83\x28\xee\xeb\xca\x38\x37\x0a\x12\xb8\x8f\x1e\xb6\x78\xec\x79\x6c\x5d\x1f\xe7\xa4\xe4\xc1\x93\x18\xf1\x01\x3d\x0c\x01\xd3\x88\x73\x41\xb6\xec\xb2\x87\xc8\xce\x0b\xf4\x5d\x5d\xd9\xc4\xb3\xc8\x3b\xf8\x8e\xae\xd1\xba\xc9\xe8\x14\x3f\x47\x27\xb2\xfa\x53\x01\x64\x4c\x1e\xf3\x0d\xb4\x7d\x6a\x94\x38\xad\x2e\xa1\x94\x01\x4c\xcd\x8f\xc0\x59\xa1\xa1\xdc\xf4\xa4\x13\x92\xd2\x0e\xa8\x85\x01\xff\xcf\x08\x89\x15\x78\x14\xa0\xa7\x41\x45\xe9\x91\xc0\x50\x2b\x0d\x24\x75\x97\xb9\x93\x3a\x90\xc7\x13\x77\x19\xab\x7d\x4e\x90\xfa\x18\x8f\x95\x97\x6a\x56\x5d\x4d\xa0\x5b\x4f\x4f\xf7\xd3\x79\xbc\x41\x53\x84\x7f\x75\x7b\xbc\xbb\xc8\x3c\x5c\x9c\xbb\xff\xf6\x1b\x8e\xd7\x71\x77\xfd\xe6\xed\x02\x65\xb8\xf0\xee\xfe\x17\x46\xdb\x83\xa9\x66\x78\x30\xf5\xf9\xe3\xb7\x8d\xfc\x77\xbb\xb6\xce\x02\xfa\x68\xf2\x41\xf0\x68\x0c\x98\x05\xb8\xef\xf4\x00\x2d\x0f\xf6\xf2\x01\x56\x03\x0f\x57\x76\xb2\x95\x91\x5e\x41\xa6\x5d\xd0\x0f\x70\xf3\xe5\xb2\x86\x4f\xbd\x16\xfc\x94\x0c\x5b\x56\x83\x81\xa3\xd9\xb7\xa0\x6f\x39\x4f\xcb\x93\x30\x2e\xef\xd5\xc5\x21\x50\x13\x4e\x59\xe8\x32\x4a\x49\x56\xc1\xfe\xdc\xcc\x13\xe4\x92\x2f\x55\xca\xd0\x0b\xd6\x0b\xf2\x73\x94\x38\xc5\x43\xc9\xd3\x90\x49\x2d\xa1\xe0\x5a\xc5\x71\x70\xc6\xbd\xe5\xd3\x64\x9d\xa2\x78\x56\x62\x31\x69\x02\xda\x04\x85\x88\x4e\x14\xdc\x82\x5d\x29\x19\xa7\x3d\xd1\xfe\x28\xea\xb6\x14\xc9\x9c\x31\x3b\x5d\x8c\x66\x8d\xf3\xbe\x04\x45\x2c\x6d\x98\x4c\xc6\x59\x2a\x44\xfa\x8d\x32\x97\x7a\xbb\x5e\xae\x79\x7e\x9d\x5d\x2e\xdf\x57\x25\x26\x2f\xf6\x3b\x98\x66\x1e\xea\x59\xb6\x5f\x8f\x96\xda\x87\xe7\x8e\x05\xa7\x4f\x72\x72\xaa\xfa\x1b\x00\x00\xff\xff\x33\x69\x3a\xe6\xb0\x03\x00\x00")

func componentsTutorialJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsTutorialJs,
		"components/tutorial.js",
	)
}

func componentsTutorialJs() (*asset, error) {
	bytes, err := componentsTutorialJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/tutorial.js", size: 944, mode: os.FileMode(436), modTime: time.Unix(1455281884, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dashboardJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\xcd\x6e\xe3\x36\x10\xbe\xfb\x29\x66\xd5\x02\x6b\xa3\x96\xb4\x45\x81\x1e\xbc\xb2\x81\xee\x76\x03\xe4\xd0\x36\x68\xb6\x0f\x40\x4b\x23\x8b\x09\x4d\xaa\x24\x15\x3b\x08\xfc\xee\x9d\xa1\x64\x59\xb6\x63\x6f\xda\x5e\x62\x71\x38\x7f\x9c\xdf\x2f\x69\x0a\xbf\x0a\x57\x2d\x8d\xb0\x05\x48\x07\xbe\x42\x40\xed\xa5\x45\xd8\xe0\xb2\x16\x2b\x84\xdc\x68\x4f\x24\x30\x65\xb8\xfd\x42\x7f\xec\x2f\x77\xb7\x0e\x0a\x51\xb9\x20\x98\xc0\xad\x07\x57\x99\x46\x15\x23\x52\xb8\x36\x24\x6d\x2c\x28\x74\x0e\x96\x08\x65\xa3\xd4\x33\x38\x54\x65\xd0\x25\xa4\xc6\x62\x0a\x1b\xe9\x2b\xa8\xd1\x56\xa2\x76\x20\xa0\xc4\x0d\xe0\xd6\xa3\xd5\x42\x41\x6d\x0d\xdd\x78\x89\x2e\x21\x85\xac\xf3\xae\xa7\xcc\xf8\x08\x20\x6a\xd9\x58\x35\x83\x4f\xc2\x21\xd4\x82\x74\x95\x64\x92\x1d\x24\xdf\x40\xe4\x39\x1b\x8f\xc1\x79\x2b\xf5\x6a\xf4\x24\xec\xe0\x9d\x73\xf8\x13\x45\xee\x93\xdc\xa2\xf0\xf8\x59\x09\xe7\xc6\x2f\x23\x80\x15\xfa\x5b\x2d\xbd\x14\xea\xde\xd3\xc5\x8c\x3c\xd7\xb9\x97\x46\x8f\x27\xc0\xf7\x00\x16\x7d\x63\x75\x77\x00\x7a\x53\xb8\x9e\x41\x24\x75\x81\xdb\x68\xda\xd1\xc9\xb9\x3f\xb4\xa2\x77\xce\xc0\xdb\x06\xa7\x4c\xb8\x11\x52\x35\x96\x28\x51\xb4\xfb\x48\x7c\xbb\xe9\x88\xfe\x2a\x23\x8a\x5b\x96\x9d\xb5\x92\x43\x8b\xf4\x1a\xe9\x12\x87\x3e\x78\x33\x7e\x39\xb5\xb6\x9b\x7c\x64\x2d\xad\x12\x0a\xd0\x93\x2c\xd0\xce\xde\xac\xa4\xee\x24\x8e\xf5\xdc\x37\x4b\x97\x5b\xb9\x64\x4d\x6f\xd3\xe3\x7a\x89\x63\x4d\xbf\x09\xfb\x88\x7e\xf6\x2f\x9e\xb5\x0e\x12\x7b\x2d\xa3\x10\xc7\xcf\x42\xa9\x81\x27\x94\xf3\x29\xb8\x26\xa4\x77\x9f\x94\xef\x13\xf1\x20\xb6\xe3\x97\x50\x0f\x81\xa1\x10\x5e\x7c\x7d\xae\x29\xd8\xef\x1f\x9c\xd1\xef\xa7\x90\x8b\xbc\xe2\x84\x0a\xe5\x70\x9f\xa5\x4e\xcd\x40\x3b\xcb\x4d\xfa\xec\x02\xc8\x12\xc6\xad\xb7\xec\x6a\x72\xc8\x22\xcc\xe7\x6c\x69\xc8\x0b\xa7\xef\xfa\x56\x11\x4c\x3e\xf6\xb2\xbb\xfe\xab\xf3\xa9\xf5\xa4\xa3\xee\x92\x25\x25\x3c\x38\x32\xd9\xfb\x8e\xd6\x9a\x61\x86\xb6\x95\xa5\xb8\x90\xe1\xc6\x4d\xf9\x72\xe8\xd9\x65\xbf\xda\x70\x1c\x39\x46\xaf\x1a\x7a\x46\x0d\xeb\x8c\xc2\x24\xd8\xeb\xa2\x7f\xb0\x92\x78\x73\x1f\x1a\x6c\x3c\xe9\x65\x86\xde\x06\x52\xab\x2e\x94\x85\x45\x5d\x9c\x16\xd6\xb0\xaf\xc6\x9d\x8e\xac\x90\x4f\x8b\xde\x87\x4c\x8b\x27\xc8\xb9\x4b\x7f\x17\x6b\x9c\x47\x74\x5c\x52\x3f\xb7\x3f\x71\x29\xb7\x58\xc4\xde\xd4\xd1\x62\x90\x0b\xd6\x30\x94\xd9\x0f\x1e\x7b\xc4\x75\xce\xd7\x29\xad\x50\x14\x67\xbc\xc4\x2d\x5e\xe1\x5d\x5a\xa1\x8b\x08\x2a\x8b\xe5\x3c\xfa\x2e\x02\xa3\x3f\x2b\x99\x3f\xce\x5f\x42\xdc\xfb\x06\xdf\x2d\xc2\xe4\xe4\xf1\xe4\xb2\x54\x9c\xb8\x91\x1e\xbd\xf8\x8a\x67\xb9\x51\x8a\x26\x26\x8f\xe5\xf6\xe3\xdc\xc9\x46\x9d\xc8\xed\x43\x45\x3f\x67\xdc\xc4\xaf\xe4\x82\x1e\x76\xc5\xff\xfd\x6c\xd9\x2d\x32\x39\x54\x5d\xd2\xd8\x16\x71\xae\x4c\x53\xc4\x4d\xcd\x9c\xd1\x22\x4b\xe5\x02\x3a\x81\x82\xdf\x99\xa5\xa4\xff\x3f\x18\x3d\x0c\xa2\x6b\x66\x0b\xb3\xd1\x03\xc3\xbd\xd0\xff\x32\xdd\x4e\xae\xd7\xcd\xd2\x9a\xab\x6b\xaa\xf8\x78\x29\x1c\x0f\xab\xd6\x6e\x2b\x71\xc9\x66\x96\x36\xea\x8c\x16\xaa\x01\x9b\x35\x77\x25\x2d\x40\x9a\x60\x9d\x07\xdd\xd0\xdb\x75\x2b\xae\xa3\xf2\x4a\x0c\x77\x44\x82\x1f\x20\x4a\xb1\x93\x8f\x76\xd4\x3d\xa5\x45\x57\xcd\x5f\x7e\xfc\xf0\xe1\xc3\x2e\xfd\x46\x69\x9d\x10\xb2\x94\xca\x62\x70\x7c\x53\xe3\x64\x9f\x44\xfe\x48\xcd\xfc\x85\xc7\x02\x54\x94\xeb\xce\xcd\x7e\x50\xb6\x23\x86\x9d\x19\x8a\x7d\x6d\xbc\xb1\xb4\x5f\xcf\x45\xba\x2d\x00\xef\xe6\xfd\x7a\x3b\x7a\x48\xb6\x2f\xc2\xeb\xa2\x87\xa5\x76\x2c\x7d\xa8\xa6\xeb\xf2\xc3\x65\x76\xac\xa1\x4d\xf1\x75\xe9\xfd\x02\x4b\x87\xe1\x1d\x44\x7b\x70\x68\x87\xe2\x88\x87\xe3\x86\xde\x6b\x36\xc9\x10\x9f\x1c\xbe\x09\xec\x7c\xd9\xd6\x86\x1a\x9e\xb1\x4d\x6e\xd6\xb5\xd1\x84\xc6\x46\x8c\x82\x8e\x92\x20\x19\x45\xfd\x75\x7b\x60\x81\x42\xba\x5a\x89\x67\x2a\x56\x10\xba\xdd\x18\xb0\xa6\xe5\xc2\xa0\x6e\x53\xa1\x66\x6a\x00\x4b\x54\x7b\xac\xce\xe2\xdf\x0d\x3a\x4f\x55\x2e\x95\x0b\x70\xca\x99\x35\x12\x59\xd0\x0e\x0d\x18\x8f\x6c\x3c\x34\xc4\x21\xc0\xc9\x75\xad\x10\xa2\x42\xe8\x15\xc5\x0a\x84\x22\x74\x96\xc0\x8d\x5c\x35\x01\x70\x91\x3a\xd3\xf8\xd6\x8c\x37\x7b\x57\x40\x92\xac\x2e\x3a\x32\x43\xcd\xe0\xd4\x46\x38\xb2\x42\x7b\xe6\x09\x8b\x70\x4f\x6c\xb9\x66\xe8\x48\xd1\x2e\x50\xb3\x36\x32\xad\xb0\xf4\xac\x8c\x05\x1b\x87\xf6\x22\x36\xe4\x1c\xcd\xe0\x46\x89\x15\x5b\x0a\x53\x97\xc4\x98\xca\xb0\x94\x3a\x78\x33\x30\x1e\xc3\xd2\x18\x15\x10\xe2\x51\x3c\x2f\x81\xc4\x8b\x3b\xac\x07\x0b\x6d\xab\xb2\xb9\xc3\x16\xee\x16\x9c\x26\x28\xdc\x2e\xc5\x4b\x6b\x6f\xd8\x7b\xd6\x6c\xa2\x6b\x9d\xa9\x62\xb5\x8a\x7f\xe2\x11\x74\xdc\xd1\xaf\x33\xfe\x7c\x75\x41\x86\x04\xb6\x69\x8c\xdb\xa4\x82\x27\x3c\x1e\xe7\x54\x49\x9c\x60\x4b\x28\xa0\xe3\x3a\x5d\xa1\xaf\x4c\x49\xdc\x12\x69\x2d\x38\x3e\x31\x01\x04\xd2\xa7\xb0\x1b\x95\x19\x41\x72\xa3\x57\x8b\x2e\xd8\xf4\x6f\x45\xc9\x93\xe2\x5d\x96\x76\x17\x70\xa7\x90\x41\x3d\x01\xb6\xfc\x71\x0f\x40\x42\x39\x16\xe8\xb9\x34\x93\x24\xb9\x36\xce\x2e\xf4\x5b\xdf\x6e\xff\x04\x00\x00\xff\xff\x53\xa9\xed\xbb\xf3\x0c\x00\x00")

func dashboardJsBytes() ([]byte, error) {
	return bindataRead(
		_dashboardJs,
		"dashboard.js",
	)
}

func dashboardJs() (*asset, error) {
	bytes, err := dashboardJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dashboard.js", size: 3315, mode: os.FileMode(436), modTime: time.Unix(1455286513, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4f\x4f\xe3\x3e\x10\xbd\xf3\x29\xfc\xf3\x05\x90\x88\xdd\xf2\xef\x87\xd8\xa4\x12\x0b\x3d\x70\x58\x81\x56\xbb\xd2\xee\xd1\xb1\xa7\x8d\x8b\x63\x07\x7b\x92\xd0\x6f\xbf\x76\xd3\x22\x40\x5a\xc4\x8a\xa8\x87\x8e\xc7\x9e\xf7\x32\xe3\x37\xe3\xfc\xbf\x9b\xbb\xeb\x1f\xbf\xef\xe7\xa4\xc2\xda\xcc\xf6\xf2\xf4\x47\x8c\xb0\xcb\x82\x82\xa5\xb3\x3d\x42\xf2\x0a\x84\x4a\x46\x34\x6b\x40\x41\x64\x25\x7c\x00\x2c\x68\x8b\x8b\xec\x82\xbe\xdc\xaa\x10\x9b\x0c\x1e\x5b\xdd\x15\xf4\x57\xf6\xf3\x2a\xbb\x76\x75\x23\x50\x97\x06\x28\x91\xce\x22\xd8\x18\x77\x3b\x2f\x40\x2d\xe1\x55\xa4\x15\x35\x14\xb4\xd3\xd0\x37\xce\xe3\x8b\xc3\xbd\x56\x58\x15\x0a\x3a\x2d\x21\xdb\x2c\x8e\x88\xb6\x1a\xb5\x30\x59\x90\xc2\x40\x31\x8d\x40\x03\x12\x6a\x34\x30\x9b\x63\x05\x9e\x5c\xdd\xdf\x06\x72\x23\x42\x55\x3a\xe1\x55\xce\x87\xbd\xed\x41\xa3\xed\x03\xf1\x60\x0a\x1a\x70\x6d\x20\x54\x00\x91\xb3\xf2\xb0\x28\x68\xca\x21\x5c\x72\x2e\x95\x5d\x05\x26\x8d\x6b\xd5\xc2\x08\x0f\x4c\xba\x9a\x8b\x95\x78\xe2\x46\x97\x81\x97\xce\x61\xe8\x05\xca\x8a\x9f\xb0\x13\x76\xce\x83\x11\x08\x83\x1b\xbd\x68\x58\xad\x2d\x93\x21\xec\xb2\x1c\x81\x72\x11\x6b\x92\x89\x1e\x82\xab\x81\x9f\xb2\x33\x36\xe1\x91\xe0\x95\xfb\x05\xeb\x40\x1b\xa4\xd7\x0d\x92\xe0\xe5\x87\x69\x3c\x08\x89\x7c\xc2\xa6\xa7\xec\xff\x61\xc1\x56\x11\x30\xe7\x03\xd6\x6c\x44\xe0\x4c\xb9\x7a\x24\xf0\x52\x94\x60\x32\xe9\x3c\xf0\x33\x76\xc1\x8e\x4f\x78\xe9\x5d\x1f\xc0\x6f\x4a\x32\x0e\xc7\xea\xb1\x05\xbf\xe6\xc7\x6c\xca\xa6\xdb\xc5\x88\xe8\x75\xbc\x3f\x9b\x6a\x9d\x08\xa6\xec\x78\xe7\x18\x8f\x01\x7b\x8d\x08\x3e\x7b\x16\xe9\x56\xba\xab\xf0\x46\xb7\x6f\xe9\x72\xbe\x1b\x02\x79\xe9\xd4\x9a\x6c\x24\x5c\xd0\x46\x28\xa5\xed\xf2\x92\x9c\x9f\x36\x4f\x64\x92\x7e\x3b\xb9\x2b\xdd\x11\xad\x0a\xba\xed\xe3\x04\x17\x5d\x6f\x54\x89\xeb\x26\xa2\x20\x3c\xe1\x70\x7d\x74\xc8\x86\xc7\xaf\x6e\x9c\x8d\x61\x81\x43\x6a\x66\x68\xdf\x53\xc9\x07\x50\xb0\x45\xe7\xe3\xc4\xf8\x1c\x4a\xe3\x5d\xa7\x55\x54\xd4\xa7\x50\x42\x5b\xa6\xc3\xe5\x67\x71\x6a\xe1\x1f\xe0\xbd\xd6\xfc\x1b\x86\xda\x0d\xc5\x7f\x89\x1d\xb6\x09\xf9\x9e\xda\xf6\xe6\xee\x1b\xf3\x60\x63\x29\x0e\xf2\xe7\x11\x4b\x44\xa3\x5b\x1f\xe7\x1b\x8f\x06\xef\x26\x94\xcf\x8e\x88\x72\xb2\xdd\x88\x78\x09\x38\x37\x90\xcc\xaf\xeb\x5b\x75\xb0\xbf\xd5\xc5\xfe\xe1\xe1\x97\x81\xf8\x95\xda\x92\xc8\xe2\x63\xc4\x87\x47\xe9\x4f\x00\x00\x00\xff\xff\xa6\xfb\x3c\xdf\xa5\x06\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 1701, mode: os.FileMode(436), modTime: time.Unix(1455282742, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"components/ethereum.js": componentsEthereumJs,
	"components/market.js": componentsMarketJs,
	"components/provider.js": componentsProviderJs,
	"components/subscriber.js": componentsSubscriberJs,
	"components/tutorial.js": componentsTutorialJs,
	"dashboard.js": dashboardJs,
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"components": &bintree{nil, map[string]*bintree{
		"ethereum.js": &bintree{componentsEthereumJs, map[string]*bintree{}},
		"market.js": &bintree{componentsMarketJs, map[string]*bintree{}},
		"provider.js": &bintree{componentsProviderJs, map[string]*bintree{}},
		"subscriber.js": &bintree{componentsSubscriberJs, map[string]*bintree{}},
		"tutorial.js": &bintree{componentsTutorialJs, map[string]*bintree{}},
	}},
	"dashboard.js": &bintree{dashboardJs, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

