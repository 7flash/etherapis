// Code generated by go-bindata.
// sources:
// assets/components/ethereum.js
// assets/components/market.js
// assets/components/provider.js
// assets/dashboard.js
// assets/index.html
// DO NOT EDIT!

package dashboard

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentsEthereumJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x4d\x6f\x23\x37\x0c\xbd\xfb\x57\x10\x3e\x8d\x51\x7b\xdc\x5e\x7a\x70\xb2\x29\xda\x6d\x81\x0d\xd0\x0d\x82\x6d\x7b\x5a\xec\x81\x9e\xe1\xd8\x4a\x66\xa4\xa9\xa4\xb1\x93\x06\xfe\xef\x25\x25\xd9\x19\x7f\xa5\x6e\x7b\xd8\x1c\x62\x48\x22\x29\xbe\xf7\x48\x71\xa6\x53\xf8\xc5\x2f\xc9\x52\xd7\xfc\xe6\xd1\x3b\x50\x0e\x10\xfe\xb8\x85\xc2\x34\xad\xd1\xa4\x3d\xf8\x25\x7a\x28\x95\x6b\x6b\x7c\x76\xbc\x22\xa0\xe4\x01\x9a\xfc\xda\xd8\x47\x70\xec\xda\xb1\xaf\xae\x8c\x1b\x70\x48\xa3\x83\x5d\x83\x4a\x83\xc6\x95\x5a\xa0\x57\xbc\x37\x47\x9b\xc3\xad\x87\x5a\x39\x1f\x23\xe9\xae\x21\x0b\xa6\xe2\xeb\xb4\xa6\xc2\x53\x09\x2d\x91\x75\xe3\x70\x5a\x74\xd6\x72\x06\x12\x71\x5e\x9b\xe2\x51\xcc\xe7\x6c\x8f\xba\x0c\xe7\x68\xad\x5a\x61\x0d\x5e\x35\x24\x41\x64\xaf\x46\xe7\xa3\x75\xce\x7e\xe2\x7a\x6f\x4d\x4b\xd6\x2b\x72\x33\x59\x02\xe0\x03\x3e\xcd\xf8\x17\x7e\xbc\xbf\x05\x4b\x7f\x76\xe4\x3c\x47\xdd\xfd\x4d\xa0\xea\x74\x91\x75\xb6\x66\x60\x56\xe9\xc5\x18\x5c\x57\x14\xe4\x5c\x3c\x28\xd1\x23\x3c\x38\xa3\xf3\x4f\xb8\xfe\xc8\xdb\xb8\xa0\xd1\x28\xc5\x6e\x15\xfb\xcd\x62\xec\x1d\x4f\xa4\xcb\xd6\x28\xe6\x92\x63\xc7\x90\xd1\xda\x52\x65\xc9\x2d\x67\x10\xb9\x4f\x4b\xe6\x91\xf3\x11\x60\x93\x08\x8d\x59\x6c\x54\xcd\xac\x11\xd3\x54\xba\xc1\x0a\xed\x81\x6a\xef\xe0\x13\x61\xe1\xf3\xc2\x12\x7a\x7a\xcf\x24\xb8\xec\x65\x00\xc0\xb7\x2c\xc8\xdf\x6a\xe5\x15\xd6\x62\x4a\xe0\x28\x71\xff\x17\x59\x03\x7c\x0b\xc3\xdf\x92\xb7\x13\x3d\x67\xdf\x03\xc7\x59\x00\x2f\x3a\x66\x23\x90\xd8\x92\xbe\xef\xac\x4e\x0b\x88\xca\xcd\xe0\xf3\x97\x71\xda\x58\x12\x96\x4c\x85\xee\xea\x3a\x6e\x6d\xae\xf8\x67\x33\x8e\x89\xed\x2e\xfb\x59\x95\x1f\x4d\xc7\xec\x28\x29\xa1\x95\x79\xe4\x2a\x58\x2f\x29\xd6\x50\x2a\xad\xd7\x72\xac\x94\x56\x6e\xc9\x39\xd7\x06\x4b\x66\x52\x2a\x2a\x06\x64\x53\x9b\xb0\xb1\xe0\xca\x94\xaa\x60\x0e\xb7\xa4\x32\x44\x25\xf5\x2d\xdc\x6a\xac\x43\x60\xe2\x92\x74\x7c\x5b\xaa\xd7\x39\x16\x8f\x2c\x95\x68\x27\x04\x1c\x25\x78\x82\x02\xbf\x54\x2e\x4f\x57\xdc\x0b\xfe\x6c\x74\x25\x14\xdf\x26\x09\xb3\x23\x83\x71\xf4\x69\xb9\x2a\x77\x07\xa3\xab\xa3\x60\x1f\x98\xbb\xb7\x62\xc9\xf9\xd9\x50\x5b\x8a\xfb\xf7\x8a\x5a\x56\xd1\x8a\x22\x43\xd2\x83\x27\x1a\x2f\xf4\x96\xd2\x0f\xbc\x15\xec\x1a\x21\xcc\xc4\x68\xc1\xcd\x14\x3b\xee\x2a\x63\xb9\x31\xe6\x93\x57\x6d\x02\xb9\x2d\x5f\x14\xfa\x5d\x38\xec\x67\x70\x8e\xbe\x98\xbf\x74\x65\xd6\x5f\x87\x4e\x82\x6f\x60\x38\x0d\x99\x0d\xc7\xaf\xee\xd2\x81\x1c\x22\xba\x33\x43\xa1\x40\xb3\x97\x54\x80\x72\xba\x61\xea\x36\xf9\x5c\xe9\x32\xc4\x1c\x9d\xa2\x45\x28\x3c\x60\x25\xbd\x38\xa1\x72\xd3\x9b\x93\x5a\x63\xdb\x6f\x71\xb7\x58\xf2\xd3\xd6\xc3\xf7\x21\x54\xfa\x7f\x84\x27\x97\xf5\xd1\xc9\xfa\x04\xba\xd8\x4d\xf2\xff\x1f\xc0\xe9\x92\x5f\xb3\xaa\x46\xef\x49\xbb\xfd\xe4\x5d\x7c\xe3\x59\x52\x79\xe3\x2d\xb5\xc6\x72\x15\xcc\x83\xdc\x11\x8e\x38\x9f\x6f\xf5\x2c\x75\xf6\xb5\x6b\x51\xdf\x0c\xb6\x2f\xe6\xb5\xe8\xfb\x5e\x5a\x84\x6f\x0e\x2a\xbc\x7b\x89\xd9\x4b\xea\x79\xd8\xd9\x4c\x7b\xf6\x3f\x09\x89\x77\xf1\x35\x0f\x84\xee\xd9\x07\x8c\x47\xe6\xbf\xab\xe6\x02\xeb\xeb\xe9\x6b\x6a\x91\x97\xc1\x66\x34\x58\x33\x57\x66\x9d\x1f\x3e\x9a\xfb\x6b\x99\x85\x4f\xad\x71\xb4\xff\x16\x0e\xc2\x10\xe9\x01\xbc\x64\x44\xa6\x49\xc5\xc5\xb3\xe3\x3e\xf6\xd7\x9a\x24\x1c\xda\x5d\xad\xd5\xcf\xbd\x1e\xf4\xe6\xec\xd4\x4a\xc5\xfd\x6b\xea\x5b\x59\x86\x4a\xe7\x21\xf1\xf9\x8b\xa4\x17\xc6\x42\x3f\xcf\x73\x43\xe1\x5f\x89\x0c\x85\xf8\xdd\x61\x43\xef\x86\x3c\xca\x79\x84\x4f\x3c\x3d\xf9\x61\x4f\x1d\xd5\xb7\xa9\x10\x2a\x9c\x58\xe7\x86\x37\xd7\x53\x75\x03\x2f\xbd\x9a\x0f\x10\xf2\x9a\xf4\xc2\x2f\x37\x11\xd0\x5b\xaa\x5d\x05\xe6\xfb\xa5\x72\x09\xf3\xdb\x16\xde\x6f\xd8\x24\xc8\x59\x76\x83\xd1\xec\xd0\x89\xdb\x24\xc5\x3e\x10\x75\x12\xd3\x0a\x94\xf7\x13\xfc\x8a\x94\x4b\x2d\xc8\x34\x3b\xc1\x7b\x04\xf3\x03\xb4\x68\x1d\xf1\x34\xc9\x0e\xcf\xf2\x88\x6c\x0c\xdf\x7d\x3f\x82\x19\x7c\xbb\x89\xf8\x2f\x55\x27\x76\xe6\x25\xe2\x84\xcf\x19\xaa\xb1\x95\xa9\xeb\x94\x2e\x78\xc0\x4b\x5a\x5e\x15\x1d\xd6\x68\x07\xbd\xef\xd1\xa4\xc1\x1a\x1d\x7f\xfd\x68\x2a\xff\x9f\x76\xdb\x4b\x43\x06\xf1\xe6\x23\x11\x23\x8e\xaf\xa8\x61\x21\x59\x4c\xcc\x1b\x12\x36\xa6\x91\xcf\xb3\x4e\xab\xa7\x63\x15\x05\x1b\xbf\x89\x4d\x3b\xca\x2b\x6b\x9a\x3b\xb3\xce\x44\xce\xa1\xe6\xf9\xc6\xa3\xfa\x99\x41\x97\xc3\xcd\xdb\xa2\xfe\x1d\x00\x00\xff\xff\xb0\x6d\x74\xe5\x11\x0c\x00\x00")

func componentsEthereumJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsEthereumJs,
		"components/ethereum.js",
	)
}

func componentsEthereumJs() (*asset, error) {
	bytes, err := componentsEthereumJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/ethereum.js", size: 3089, mode: os.FileMode(436), modTime: time.Unix(1455279368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsMarketJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\x3f\x4f\xc3\x30\x10\xc5\x77\x7f\x8a\x53\xa6\x54\xa2\xee\xd0\xad\xb4\x95\x10\x13\x03\xa8\x62\x63\x3c\xe2\x0b\x3e\x61\xec\xc8\x3e\x37\xaa\x50\xbf\x3b\x49\x08\xc8\x08\x50\x17\xff\x79\xfe\xf9\x3d\xdd\xdd\x11\x23\xdc\x63\x7c\x25\x81\x1d\x3c\x12\x36\xa2\x9b\x48\x28\x74\xeb\x30\xa5\xfa\x5d\x01\x44\xf2\x86\xe2\x06\xda\xec\x1b\xe1\xe0\xeb\x05\x8c\x32\x00\xb7\x50\x8b\xe5\xa4\xbb\x18\xba\xa4\x2d\x1b\xfa\x7a\x1a\x7f\x49\x8e\x1e\x7c\x76\x6e\x52\xce\xaa\x50\xeb\x19\xda\x1a\x3e\x42\x33\x26\x3d\xe0\x1b\xed\xaa\x0e\x3d\x39\x98\xd6\xa5\xa1\x16\xb3\x93\x6a\x3f\xb3\xff\xd0\x4b\x4b\x68\xd8\xbf\x14\xdc\x40\xda\xf5\x6f\x50\x58\x1c\x55\xfb\x9b\xc3\xdd\x5c\xf1\x76\x65\xd7\x85\xfb\x6a\xb0\xbf\x14\xf6\x1c\xcc\xe9\x47\xd2\x13\xa1\xbd\x82\x53\xc8\xd0\x73\xb2\x5a\x6b\xd8\x1c\xfe\xb6\x2c\x2e\x8b\x6b\x35\x36\xe4\x3c\xec\xaa\x67\x6f\x42\xaf\xbf\x67\xf0\x79\x50\x1f\x01\x00\x00\xff\xff\x59\x79\xb7\xe1\x98\x01\x00\x00")

func componentsMarketJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsMarketJs,
		"components/market.js",
	)
}

func componentsMarketJs() (*asset, error) {
	bytes, err := componentsMarketJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/market.js", size: 408, mode: os.FileMode(436), modTime: time.Unix(1455279554, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsProviderJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x56\x4d\x73\xda\x3c\x10\xbe\xf3\x2b\x76\x7c\x22\x07\x8c\x3f\x20\xc4\x09\xe1\x3d\xbc\xd3\xf6\xd2\x69\x32\x4d\xa7\x77\x59\x5a\x81\x66\x8c\x44\x25\x19\xc2\x64\xfc\xdf\x2b\xdb\xa4\xe1\xc3\xc6\x24\xd3\x53\x2f\x42\xd2\x3e\xbb\xac\x9e\x67\xb5\xd6\x9a\x68\x78\xd4\xea\x79\x0b\xf7\xf0\x1d\x09\xb5\x3e\xd5\x48\x2c\xfe\x9f\x11\x63\xfa\x2f\x3d\x00\x8d\x92\xa1\xbe\x05\x9e\x4b\x6a\x85\x92\xfd\x2b\x28\xb7\x4b\x83\xcd\xb5\x84\x7e\xb5\x00\x98\x32\xb1\x06\x5a\xba\x7d\x23\x4b\xbc\xf7\xa8\xca\x06\xd9\x7c\x30\xf2\x66\x3b\xc0\x09\xe4\xc5\x2e\x84\xf1\x57\x5a\xad\x8c\xaf\x64\x26\x24\xc2\x7f\xe0\xad\x88\xc4\x0c\xaa\x71\x60\x72\x4a\xd1\x18\x0f\x6e\x0f\xf7\x19\x72\x92\x67\xd6\x2b\xde\x62\x9f\x26\x50\x43\x17\x48\x98\x90\x73\x6f\x1f\xe9\xb0\x8b\xf8\x14\x6a\x85\xcd\xd0\x9b\xed\xa7\x25\x9d\xb9\xb8\x85\xe6\x4c\x1f\xaa\x59\x95\xdc\x03\xe7\xd5\xbc\x98\x0e\x17\xf1\x41\x52\x43\x97\x55\x77\x96\xa9\x62\xdb\xa3\x14\x6b\x55\x8c\x25\xd6\xc0\x5c\xc1\x02\x35\xfa\xbe\xdf\x1e\xfa\x60\xb9\xb7\xb8\x72\x63\xd1\x2b\xae\xee\x7a\xbd\x57\xb1\x05\x9a\xf7\xcb\x2d\x38\xf4\xf7\x68\x58\x08\x86\xaf\xa6\x3f\xb5\x20\xf3\x2c\xab\x76\x8a\xb6\x0a\x69\x2d\x06\x4f\xab\x8d\x77\x8e\xa8\x5d\x3d\x85\xd1\xa9\x94\xb3\x47\xb2\x5d\xa2\xb4\xb0\xaa\x0f\xd7\x21\xc2\xf1\xb2\x2b\x91\x5a\x09\x59\x95\xac\xf7\x05\x55\xa6\x28\xb1\x4a\x03\xc3\xa5\xf2\x0a\xa8\x0b\xc2\x55\xb3\xce\xb1\x18\xb6\x7b\x3e\x59\x47\xf5\x12\x4f\xfc\x38\xc9\xcc\x81\x63\xb7\x92\x1b\x21\x99\xda\xf8\x6f\x5a\xee\x66\xb5\xc4\x3f\xcb\xbb\xf1\x6f\x0a\xbc\x2e\x8f\x76\x2c\x6f\xcb\xa5\x3a\xea\x15\x87\x1e\xef\xb8\x88\x15\xd8\x92\x34\xc3\x7d\x78\xbd\x51\x8d\x03\x63\xb5\x58\x21\xdb\xad\x16\x6a\xed\x44\x6e\x08\x52\x86\x29\xdb\x51\x93\xa5\xb4\xe9\x66\x43\xe5\x36\x7b\x42\xbd\x16\x14\xa7\x43\x37\x3f\x07\xcb\x53\x43\xb5\x48\x51\x77\x21\x1f\x36\xc8\xba\x30\x5f\xc5\x52\xd8\x2e\xd0\x0f\x65\x49\x49\xb6\xe8\x0e\x47\x8c\x75\x35\xf3\x2b\x47\x73\x26\xaa\xb3\x34\x32\x51\x7a\xb4\xb0\x37\xb5\xa5\x6e\x1f\xe0\x95\xcd\x8e\xee\xb3\xfb\x93\x16\x7d\x6a\x78\xf0\x1c\x27\x41\x4c\xc6\x63\x0c\x6e\x82\x88\x07\x61\x18\x4c\x26\x69\x1a\xc7\xf1\x4d\x74\x13\x45\x49\x3c\x61\xc9\x08\x79\x3a\xe1\x5d\x91\xe2\x70\x04\x9f\x85\x94\xb8\xed\x42\x8e\x83\xe0\x42\x64\xe8\x87\xf0\xc9\xb1\xa4\x3b\x43\xc2\x52\xc8\xdc\xba\xde\x41\xe6\x67\xce\xdc\x26\xc5\xdf\x67\x35\xe1\xf4\x9a\x23\x67\x13\x1e\xc7\x94\x44\x09\x62\x38\xe1\x51\xca\x91\x26\xa3\xd1\x75\x32\xc6\x31\x8f\x12\x4a\x3a\x59\xbd\x98\x81\x30\xb8\x14\x77\x61\x40\x02\x1c\x37\x60\x90\x2a\xc9\x3e\x48\xab\xdb\x6f\xae\x63\x67\x28\x5b\xcb\x49\x0b\x3b\x7e\x5c\x34\xbd\x37\x2e\x7c\x25\xdc\x1d\x7f\x5c\x5e\xbf\x22\xd5\x6f\xef\x77\x00\x00\x00\xff\xff\xe3\xbc\x30\x67\x28\x0a\x00\x00")

func componentsProviderJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsProviderJs,
		"components/provider.js",
	)
}

func componentsProviderJs() (*asset, error) {
	bytes, err := componentsProviderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/provider.js", size: 2600, mode: os.FileMode(436), modTime: time.Unix(1455279611, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dashboardJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x51\x8f\xa3\x36\x10\x7e\xcf\xaf\xb0\x68\xa5\x4b\xa4\x00\x5b\x55\xea\xc3\x6e\x88\x74\xdd\x5e\xa5\x7d\x68\x7b\xea\x55\x7d\x9f\xc0\x10\x7c\x71\x6c\x64\x9b\xdd\x54\x11\xff\xbd\x63\x30\x89\x03\x64\xef\xf6\x61\x81\xf1\xe7\x99\x6f\x66\x3c\x9f\xf3\x0a\x9a\x7d\xd2\x5a\xe9\x8f\x02\xb5\x65\x19\xfb\x1b\x21\xb7\x49\xae\x11\x2c\x3e\x0b\x30\x66\x79\x5e\x30\xa6\x51\x16\xa8\x1f\x59\xd9\xc8\xdc\x72\x25\x97\x2b\xe6\xcc\x8c\xf1\x92\x2d\x6d\xc5\x4d\x52\x6b\x55\x9b\xa4\xe2\x05\x0e\x4b\x6e\x97\x6d\xb4\x64\xb2\x11\xa2\xb3\xb4\x8b\xc0\xba\xf4\xa0\x4d\xc1\x5f\x59\xee\x22\xfd\x09\x47\xcc\x22\xad\xde\xa2\xad\x5f\x9b\xae\xe6\x4a\xc4\x62\x1f\xff\x1c\x6d\x37\x29\x2d\x7d\x13\xf8\x4b\xe0\x6b\x0a\x82\x2e\xe9\xee\x7f\x5c\x80\xdc\xa3\x66\x16\x4f\x36\xce\x51\x5a\xd4\x11\xd3\x4a\x0c\xa8\x1b\x3f\xe4\x89\x87\x7e\x4a\x60\x25\xc4\x78\x22\xd3\x11\x5c\x7d\x62\xab\x39\xf9\x13\xe8\x78\xf2\x2d\xfb\x15\xf2\x03\x95\x90\xa9\xb2\x14\x5c\xe2\x9a\xd5\x02\xc1\x20\xcb\x2b\xcc\x0f\x2c\x57\xd2\x50\x24\x56\x2a\xcd\x0a\xb4\xc0\x85\x49\x92\x24\xe4\x3d\xca\x35\xfc\x0c\x3e\x56\x0b\x57\xe3\x76\xf5\xb4\x58\xb8\xbe\xfe\x06\xa6\xda\x29\xd0\xc5\xdd\xb6\xee\xd1\xbe\x48\x6e\x39\x88\x2f\x96\x16\x66\xfa\xeb\x9b\x35\x74\x94\xd3\x31\x38\x11\x0c\x84\xa1\x24\x8e\xa0\x0f\x68\x1f\x99\xd5\x0d\xae\x3d\x02\x6a\xfe\x97\x74\x39\x7a\xb3\x33\xfc\x4e\x19\x35\x9a\x2c\x51\xd4\x3e\x39\x8e\x0e\x2c\x14\x14\x2f\xde\xdd\x38\x6a\x77\xa2\x0c\xda\x8e\xd5\xf2\x7c\x3f\xaa\xcb\x35\xf0\xf7\x87\x5f\xfa\x4e\x87\x3d\xc1\xc1\x5f\xe7\x3e\x70\x48\xc4\x9f\x41\x88\xc0\x5b\xa3\xc5\x9a\x99\x26\xcf\xd1\x98\xc1\xf3\x8f\x09\x7c\x85\xd3\xf2\x4c\x6b\x8f\xac\x03\x14\x60\xe1\x9f\xff\x6a\x4a\xf7\xc3\x57\xa3\xe4\x87\x35\xcb\x81\xfa\x3c\xf0\xf7\x75\xf2\x6e\x02\xef\x6e\xdf\x75\x76\x82\xd1\x32\x8e\x74\x72\xad\x23\xcb\x32\x17\x29\xc4\x4e\x32\xfc\x56\x1b\xba\x34\xfb\xbf\xf6\xf2\xe6\x39\xf5\x4c\xbc\xb5\x4d\x76\x54\xad\x8e\xc8\x6a\xe0\x8e\x4e\x30\x02\xe6\xa7\x4a\x53\x5d\x28\x70\x63\xd6\x6e\x31\x64\x76\x9f\x97\x6f\x67\x48\x8c\xb2\x0a\x99\xf9\xb9\x48\xba\x78\xbe\xfa\xd7\x28\x89\x55\x5f\x68\xcc\xe4\x7e\xb9\xba\xec\x09\xd9\xf6\x92\x73\xed\xe7\x5d\x0d\x9b\x11\xa4\x60\xd6\x24\xdc\x48\x06\x7d\xee\x68\xb6\xfa\x47\x5c\xf2\x13\x16\xb1\x55\xf5\xbb\x32\x43\x79\xd0\x50\x4b\x52\x94\x91\x88\x8c\x70\xde\x69\x85\x50\x4c\xb0\x84\x86\x19\xec\x4e\x83\x2c\x22\x56\x69\x2c\xb3\xe8\x87\x88\x29\xf9\x2c\x78\x7e\xc8\xce\x5d\xdd\x2f\x33\xd6\x6e\x3f\xd9\x8a\xd4\xed\xe3\xe7\x17\x73\xd5\x85\x4d\x0a\x23\x42\xb7\x3a\x73\xe1\xc8\x8b\x21\x60\x34\xc3\x81\xa4\x56\x40\xed\xd4\xcc\xbf\x4c\xa9\x37\x62\xb4\x6f\x28\x20\x3d\x26\x68\xc2\x0b\xbe\xa5\x74\xdf\xc9\xaa\x9f\xf4\x76\x3b\xa7\xc3\xa6\x52\x75\x4d\xe7\x22\xde\x81\x21\x90\x97\x60\x4a\x9d\xf5\xbb\x5c\xda\x9b\x94\x42\x8c\x59\xa6\x8d\x98\xd8\xe6\x5b\xa4\xf9\xbe\x1a\x5f\x09\x1d\xbc\x2b\x33\x36\x47\x77\xdc\x0d\x73\xd2\xe0\x49\x7b\x35\x69\xdd\x79\xa7\x93\x9c\x45\x29\xbd\xa4\xaf\x0f\x29\xfa\x1d\x74\xdb\x60\xa9\xd1\x54\xd9\xf9\xa7\x87\x87\x87\x36\x9d\xd2\x9b\x36\x67\x6c\x9a\x5c\x14\xc4\xf7\xbd\x3b\x72\xee\x5c\x6e\x82\xdf\x03\xee\x3e\xf7\x09\x5c\x54\xa8\x9f\xdf\x5b\x7e\x9b\xcf\x5a\x9d\x38\x9a\xe9\x86\x4e\x6a\x47\xe0\x7f\xa1\x11\x33\xbe\xe7\xa0\x7d\xc7\xa6\xd8\x5e\xb4\x43\xf0\xdd\x4b\xf1\xe9\x72\x2b\xbe\x51\x04\xf5\x96\x84\xf7\xe2\xe5\x7d\xf1\x7f\x00\x00\x00\xff\xff\xfb\x5c\x44\xad\x0a\x09\x00\x00")

func dashboardJsBytes() ([]byte, error) {
	return bindataRead(
		_dashboardJs,
		"dashboard.js",
	)
}

func dashboardJs() (*asset, error) {
	bytes, err := dashboardJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dashboard.js", size: 2314, mode: os.FileMode(436), modTime: time.Unix(1455279680, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x41\x4f\xe3\x3c\x10\xbd\xf3\x2b\xfc\xf9\x02\x48\xc4\xa6\x50\xf8\x10\x9b\x54\x62\x69\x0f\x3d\xac\x40\xab\x5d\x69\xf7\xe8\xd8\xd3\xc6\xc5\xb1\x83\x3d\x69\xda\x7f\xbf\x4e\xd3\xa2\xb6\x07\x54\xa4\xa8\x87\xda\x33\x9e\xf7\x32\x33\x6f\x26\xfd\x6f\xfc\xf2\xfc\xeb\xef\xeb\x84\x14\x58\x9a\xd1\x59\xda\xfe\x11\x23\xec\x3c\xa3\x60\xe9\xe8\x8c\x90\xb4\x00\xa1\xda\x43\x3c\x96\x80\x82\xc8\x42\xf8\x00\x98\xd1\x1a\x67\xc9\x03\xdd\x77\x15\x88\x55\x02\xef\xb5\x5e\x66\xf4\x4f\xf2\xfb\x29\x79\x76\x65\x25\x50\xe7\x06\x28\x91\xce\x22\xd8\x18\x37\x9d\x64\xa0\xe6\x70\x10\x69\x45\x09\x19\x5d\x6a\x68\x2a\xe7\x71\xef\x71\xa3\x15\x16\x99\x82\xa5\x96\x90\x6c\x2e\x57\x44\x5b\x8d\x5a\x98\x24\x48\x61\x20\x1b\x44\xa0\x0e\x09\x35\x1a\x18\x4d\xb0\x00\x4f\x9e\x5e\xa7\x81\x8c\x45\x28\x72\x27\xbc\x4a\x79\xe7\xdb\x3e\x34\xda\xbe\x11\x0f\x26\xa3\x01\xd7\x06\x42\x01\x10\x39\x0b\x0f\xb3\x8c\xb6\x39\x84\x47\xce\xa5\xb2\x8b\xc0\xa4\x71\xb5\x9a\x19\xe1\x81\x49\x57\x72\xb1\x10\x2b\x6e\x74\x1e\x78\xee\x1c\x86\x46\xa0\x2c\xf8\x2d\xbb\x65\xf7\x3c\x18\x81\xd0\x99\xd1\x8b\x8a\x95\xda\x32\x19\xc2\x2e\xcb\x1e\x28\x67\xb1\x26\x89\x68\x20\xb8\x12\xf8\x90\xdd\xb1\x6b\x1e\x09\x0e\xcc\x7b\xac\x1d\x6d\x90\x5e\x57\x48\x82\x97\x27\xd3\x78\x10\x12\xf9\x35\x1b\x0c\xd9\xff\xdd\x85\x2d\x22\x60\xca\x3b\xac\x51\x8f\xc0\x89\x72\x65\x4f\xe0\xb9\xc8\xc1\x24\xd2\x79\xe0\x77\xec\x81\xdd\xdc\xf2\xdc\xbb\x26\x80\xdf\x94\xa4\x1f\x8e\xc5\x7b\x0d\x7e\xcd\x6f\xd8\x80\x0d\xb6\x97\x1e\xd1\xcb\xd8\x3f\xdb\xd6\xba\x25\x18\xb0\x9b\x9d\xa1\x3f\x06\x6c\x34\x22\xf8\xe4\x43\xa4\x5b\xe9\x2e\xc2\x91\x6e\x8f\xe9\x52\xbe\x5b\x02\x69\xee\xd4\x9a\x6c\x24\x9c\xd1\x4a\x28\xa5\xed\xfc\x91\xdc\x0f\xab\x15\xb9\x6e\x7f\x3b\xb9\x2b\xbd\x24\x5a\x65\x74\x3b\xc7\x2d\x5c\x34\x1d\xa9\x12\xd7\x55\x44\x41\x58\x61\xd7\x3e\xda\x65\xc3\xe3\x57\x57\xce\xc6\xb0\xc0\xa1\x1d\x66\xa8\x3f\x53\xc9\x09\x28\xa5\xf0\x6f\xf0\x99\x8c\x4f\xc0\xa8\xbc\x5b\x6a\x15\xf5\xf4\x75\x14\xb5\x5b\x43\x5f\x89\xed\xdc\x84\xfc\x6c\x07\x65\xfc\xf2\x83\x79\xb0\x91\xfe\x22\xfd\x58\x6a\x84\x8f\xae\x88\x72\xb2\xde\xc8\x64\x0e\x38\x31\xd0\x1e\xbf\xaf\xa7\xea\xe2\x7c\x5b\xf9\xf3\xcb\xcb\x6f\x1d\xd1\x41\x3f\xdb\x36\xc6\x75\xcf\xbb\xb5\xff\x2f\x00\x00\xff\xff\x3c\x34\x8a\xa0\x07\x06\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 1543, mode: os.FileMode(436), modTime: time.Unix(1455279718, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"components/ethereum.js": componentsEthereumJs,
	"components/market.js": componentsMarketJs,
	"components/provider.js": componentsProviderJs,
	"dashboard.js": dashboardJs,
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"components": &bintree{nil, map[string]*bintree{
		"ethereum.js": &bintree{componentsEthereumJs, map[string]*bintree{}},
		"market.js": &bintree{componentsMarketJs, map[string]*bintree{}},
		"provider.js": &bintree{componentsProviderJs, map[string]*bintree{}},
	}},
	"dashboard.js": &bintree{dashboardJs, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

