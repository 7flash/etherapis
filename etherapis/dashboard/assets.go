// Code generated by go-bindata.
// sources:
// assets/components/ethereum.js
// assets/components/market.js
// assets/components/provider.js
// assets/components/subscriber.js
// assets/components/tutorial.js
// assets/dashboard.js
// assets/index.html
// DO NOT EDIT!

package dashboard

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentsEthereumJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x56\x4d\x6f\x23\x37\x0c\xbd\xfb\x57\x10\x3e\x8d\x51\x7b\xdc\x5e\x7a\x70\xb2\x29\xda\x6d\x81\x0d\xd0\x0d\x82\x6d\x7b\x5a\xec\x81\x9e\xe1\xd8\x4a\x66\xa4\xa9\xa4\xb1\x93\x06\xfe\xef\x25\x25\xd9\x19\x7f\xa5\x6e\x7b\xd8\x1c\x62\x48\x22\x29\xbe\xf7\x48\x71\xa6\x53\xf8\xc5\x2f\xc9\x52\xd7\xfc\xe6\xd1\x3b\x50\x0e\x10\xfe\xb8\x85\xc2\x34\xad\xd1\xa4\x3d\xf8\x25\x7a\x28\x95\x6b\x6b\x7c\x76\xbc\x22\xa0\xe4\x01\x9a\xfc\xda\xd8\x47\x70\xec\xda\xb1\xaf\xae\x8c\x1b\x70\x48\xa3\x83\x5d\x83\x4a\x83\xc6\x95\x5a\xa0\x57\xbc\x37\x47\x9b\xc3\xad\x87\x5a\x39\x1f\x23\xe9\xae\x21\x0b\xa6\xe2\xeb\xb4\xa6\xc2\x53\x09\x2d\x91\x75\xe3\x70\x5a\x74\xd6\x72\x06\x12\x71\x5e\x9b\xe2\x51\xcc\xe7\x6c\x8f\xba\x0c\xe7\x68\xad\x5a\x61\x0d\x5e\x35\x24\x41\x64\xaf\x46\xe7\xa3\x75\xce\x7e\xe2\x7a\x6f\x4d\x4b\xd6\x2b\x72\x33\x59\x02\xe0\x03\x3e\xcd\xf8\x17\x7e\xbc\xbf\x05\x4b\x7f\x76\xe4\x3c\x47\xdd\xfd\x4d\xa0\xea\x74\x91\x75\xb6\x66\x60\x56\xe9\xc5\x18\x5c\x57\x14\xe4\x5c\x3c\x28\xd1\x23\x3c\x38\xa3\xf3\x4f\xb8\xfe\xc8\xdb\xb8\xa0\xd1\x28\xc5\x6e\x15\xfb\xcd\x62\xec\x1d\x4f\xa4\xcb\xd6\x28\xe6\x92\x63\xc7\x90\xd1\xda\x52\x65\xc9\x2d\x67\x10\xb9\x4f\x4b\xe6\x91\xf3\x11\x60\x93\x08\x8d\x59\x6c\x54\xcd\xac\x11\xd3\x54\xba\xc1\x0a\xed\x81\x6a\xef\xe0\x13\x61\xe1\xf3\xc2\x12\x7a\x7a\xcf\x24\xb8\xec\x65\x00\xc0\xb7\x2c\xc8\xdf\x6a\xe5\x15\xd6\x62\x4a\xe0\x28\x71\xff\x17\x59\x03\x7c\x0b\xc3\xdf\x92\xb7\x13\x3d\x67\xdf\x03\xc7\x59\x00\x2f\x3a\x66\x23\x90\xd8\x92\xbe\xef\xac\x4e\x0b\x88\xca\xcd\xe0\xf3\x97\x71\xda\x58\x12\x96\x4c\x85\xee\xea\x3a\x6e\x6d\xae\xf8\x67\x33\x8e\x89\xed\x2e\xfb\x59\x95\x1f\x4d\xc7\xec\x28\x29\xa1\x95\x79\xe4\x2a\x58\x2f\x29\xd6\x50\x2a\xad\xd7\x72\xac\x94\x56\x6e\xc9\x39\xd7\x06\x4b\x66\x52\x2a\x2a\x06\x64\x53\x9b\xb0\xb1\xe0\xca\x94\xaa\x60\x0e\xb7\xa4\x32\x44\x25\xf5\x2d\xdc\x6a\xac\x43\x60\xe2\x92\x74\x7c\x5b\xaa\xd7\x39\x16\x8f\x2c\x95\x68\x27\x04\x1c\x25\x78\x82\x02\xbf\x54\x2e\x4f\x57\xdc\x0b\xfe\x6c\x74\x25\x14\xdf\x26\x09\xb3\x23\x83\x71\xf4\x69\xb9\x2a\x77\x07\xa3\xab\xa3\x60\x1f\x98\xbb\xb7\x62\xc9\xf9\xd9\x50\x5b\x8a\xfb\xf7\x8a\x5a\x56\xd1\x8a\x22\x43\xd2\x83\x27\x1a\x2f\xf4\x96\xd2\x0f\xbc\x15\xec\x1a\x21\xcc\xc4\x68\xc1\xcd\x14\x3b\xee\x2a\x63\xb9\x31\xe6\x93\x57\x6d\x02\xb9\x2d\x5f\x14\xfa\x5d\x38\xec\x67\x70\x8e\xbe\x98\xbf\x74\x65\xd6\x5f\x87\x4e\x82\x6f\x60\x38\x0d\x99\x0d\xc7\xaf\xee\xd2\x81\x1c\x22\xba\x33\x43\xa1\x40\xb3\x97\x54\x80\x72\xba\x61\xea\x36\xf9\x5c\xe9\x32\xc4\x1c\x9d\xa2\x45\x28\x3c\x60\x25\xbd\x38\xa1\x72\xd3\x9b\x93\x5a\x63\xdb\x6f\x71\xb7\x58\xf2\xd3\xd6\xc3\xf7\x21\x54\xfa\x7f\x84\x27\x97\xf5\xd1\xc9\xfa\x04\xba\xd8\x4d\xf2\xff\x1f\xc0\xe9\x92\x5f\xb3\xaa\x46\xef\x49\xbb\xfd\xe4\x5d\x7c\xe3\x59\x52\x79\xe3\x2d\xb5\xc6\x72\x15\xcc\x83\xdc\x11\x8e\x38\x9f\x6f\xf5\x2c\x75\xf6\xb5\x6b\x51\xdf\x0c\xb6\x2f\xe6\xb5\xe8\xfb\x5e\x5a\x84\x6f\x0e\x2a\xbc\x7b\x89\xd9\x4b\xea\x79\xd8\xd9\x4c\x7b\xf6\x3f\x09\x89\x77\xf1\x35\x0f\x84\xee\xd9\x07\x8c\x47\xe6\xbf\xab\xe6\x02\xeb\xeb\xe9\x6b\x6a\x91\x97\xc1\x66\x34\x58\x33\x57\x66\x9d\x1f\x3e\x9a\xfb\x6b\x99\x85\x4f\xad\x71\xb4\xff\x16\x0e\xc2\x10\xe9\x01\xbc\x64\x44\xa6\x49\xc5\xc5\xb3\xe3\x3e\xf6\xd7\x9a\x24\x1c\xda\x5d\xad\xd5\xcf\xbd\x1e\xf4\xe6\xec\xd4\x4a\xc5\xfd\x6b\xea\x5b\x59\x86\x4a\xe7\x21\xf1\xf9\x8b\xa4\x17\xc6\x42\x3f\xcf\x73\x43\xe1\x5f\x89\x0c\x85\xf8\xdd\x61\x43\xef\x86\x3c\xca\x79\x84\x4f\x3c\x3d\xf9\x61\x4f\x1d\xd5\xb7\xa9\x10\x2a\x9c\x58\xe7\x86\x37\xd7\x53\x75\x03\x2f\xbd\x9a\x0f\x10\xf2\x9a\xf4\xc2\x2f\x37\x11\xd0\x5b\xaa\x5d\x05\xe6\xfb\xa5\x72\x09\xf3\xdb\x16\xde\x6f\xd8\x24\xc8\x59\x76\x83\xd1\xec\xd0\x89\xdb\x24\xc5\x3e\x10\x75\x12\xd3\x0a\x94\xf7\x13\xfc\x8a\x94\x4b\x2d\xc8\x34\x3b\xc1\x7b\x04\xf3\x03\xb4\x68\x1d\xf1\x34\xc9\x0e\xcf\xf2\x88\x6c\x0c\xdf\x7d\x3f\x82\x19\x7c\xbb\x89\xf8\x2f\x55\x27\x76\xe6\x25\xe2\x84\xcf\x19\xaa\xb1\x95\xa9\xeb\x94\x2e\x78\xc0\x4b\x5a\x5e\x15\x1d\xd6\x68\x07\xbd\xef\xd1\xa4\xc1\x1a\x1d\x7f\xfd\x68\x2a\xff\x9f\x76\xdb\x4b\x43\x06\xf1\xe6\x23\x11\x23\x8e\xaf\xa8\x61\x21\x59\x4c\xcc\x1b\x12\x36\xa6\x91\xcf\xb3\x4e\xab\xa7\x63\x15\x05\x1b\xbf\x89\x4d\x3b\xca\x2b\x6b\x9a\x3b\xb3\xce\x44\xce\xa1\xe6\xf9\xc6\xa3\xfa\x99\x41\x97\xc3\xcd\xdb\xa2\xfe\x1d\x00\x00\xff\xff\xb0\x6d\x74\xe5\x11\x0c\x00\x00")

func componentsEthereumJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsEthereumJs,
		"components/ethereum.js",
	)
}

func componentsEthereumJs() (*asset, error) {
	bytes, err := componentsEthereumJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/ethereum.js", size: 3089, mode: os.FileMode(436), modTime: time.Unix(1455279368, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsMarketJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\x3f\x4f\xc3\x30\x10\xc5\x77\x7f\x8a\x53\xa6\x54\xa2\xee\xd0\xad\xb4\x95\x10\x13\x03\xa8\x62\x63\x3c\xe2\x0b\x3e\x61\xec\xc8\x3e\x37\xaa\x50\xbf\x3b\x49\x08\xc8\x08\x50\x17\xff\x79\xfe\xf9\x3d\xdd\xdd\x11\x23\xdc\x63\x7c\x25\x81\x1d\x3c\x12\x36\xa2\x9b\x48\x28\x74\xeb\x30\xa5\xfa\x5d\x01\x44\xf2\x86\xe2\x06\xda\xec\x1b\xe1\xe0\xeb\x05\x8c\x32\x00\xb7\x50\x8b\xe5\xa4\xbb\x18\xba\xa4\x2d\x1b\xfa\x7a\x1a\x7f\x49\x8e\x1e\x7c\x76\x6e\x52\xce\xaa\x50\xeb\x19\xda\x1a\x3e\x42\x33\x26\x3d\xe0\x1b\xed\xaa\x0e\x3d\x39\x98\xd6\xa5\xa1\x16\xb3\x93\x6a\x3f\xb3\xff\xd0\x4b\x4b\x68\xd8\xbf\x14\xdc\x40\xda\xf5\x6f\x50\x58\x1c\x55\xfb\x9b\xc3\xdd\x5c\xf1\x76\x65\xd7\x85\xfb\x6a\xb0\xbf\x14\xf6\x1c\xcc\xe9\x47\xd2\x13\xa1\xbd\x82\x53\xc8\xd0\x73\xb2\x5a\x6b\xd8\x1c\xfe\xb6\x2c\x2e\x8b\x6b\x35\x36\xe4\x3c\xec\xaa\x67\x6f\x42\xaf\xbf\x67\xf0\x79\x50\x1f\x01\x00\x00\xff\xff\x59\x79\xb7\xe1\x98\x01\x00\x00")

func componentsMarketJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsMarketJs,
		"components/market.js",
	)
}

func componentsMarketJs() (*asset, error) {
	bytes, err := componentsMarketJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/market.js", size: 408, mode: os.FileMode(436), modTime: time.Unix(1455279554, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsProviderJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x51\x6f\xe3\x36\x0c\x7e\xcf\xaf\x20\xfc\xb2\x1e\xb0\x3a\x8e\x9d\x5c\xea\x2e\xd7\x61\x18\x6e\xc3\x80\x61\x2d\xd6\x61\xef\xb2\x4c\xc5\x02\x1c\xc9\x93\xe4\xa4\xc1\x21\xff\x7d\x94\xdd\xeb\x25\x8e\x13\xa7\x45\xf7\xb0\x97\x44\x24\x3f\xd2\xf4\xf7\x51\x92\xc7\x63\x78\x30\x7a\x2d\x73\x34\x20\x2d\xb8\x02\x81\x6b\xe5\x50\x39\xa8\xd8\x12\xc9\xc1\x1c\xe4\xd2\x56\x25\xdb\x5a\xb0\x8e\x39\x0b\x2c\xd3\xb5\x6b\xa0\xb5\x45\x63\x81\xd7\xc6\x50\xc2\x88\x6a\x55\x6d\xad\x1c\x7e\x7a\xf8\xcd\x7e\xef\xcd\x27\x89\xb4\xa0\x9a\x42\x2e\x6b\xc3\x9c\xd4\x8a\x6c\x74\x3c\x1c\xad\x99\xf9\xf6\xf0\x4f\xf0\x27\x32\xee\x42\x6e\x90\x39\xfc\xb9\x64\xd6\x5e\x7d\x19\x01\x50\x65\x0a\xdf\x82\xa8\x15\xf7\xc9\x57\x1f\xc0\xbb\x01\xe8\x69\x8f\x85\x36\x0e\xb8\x34\xbc\x96\xee\x19\x29\xd5\x12\xa4\x80\x0d\x7e\x67\x10\x94\x76\xa0\x55\xd3\xaa\xab\x9d\x36\x92\x95\xcd\x6b\x35\x05\x08\x75\xe5\x0a\x69\x43\xea\xb2\xb2\x61\x41\x6d\x7c\xad\xed\x1f\xeb\x6a\xa3\x40\xd5\x65\xd9\x78\x76\xa3\x3d\xef\xd5\x33\x68\x91\xcb\xf5\xdd\xf3\xba\xb5\x80\xfb\xc6\xff\x60\x2b\xfc\x14\x18\xbd\x09\xbe\x45\x8f\xe3\x5c\x97\xd7\xe5\xf2\x7a\x12\x1f\xa0\x08\xf7\xd0\xb2\x36\xee\xb8\xff\x66\x75\xe9\x0e\x9c\x8b\xf1\x61\x03\xfb\xe6\x9e\xf1\xe1\x87\x91\x7f\x81\x1d\xfd\x6f\xa4\xca\xf5\x26\xdc\x63\xfd\x65\x49\x7c\x7e\x7e\xaa\xb4\xc5\xe7\x21\x58\x55\x5a\x79\x55\xbf\xca\xf4\xb4\x7d\xbd\x46\x3d\x7c\xf5\x30\x30\x0d\x4e\x92\xf8\x65\x4f\x20\xad\x4a\xa9\x10\x7e\x84\xa0\x62\x0a\xbd\x90\xf4\x7b\x6d\x6b\xce\xd1\xda\x00\x6e\x0f\xfd\x39\x0a\xcf\x57\xb0\x3b\x27\x41\x0b\x2d\x90\xe5\x34\x36\x5d\x19\x8a\xe4\x18\xea\xa4\x2b\x31\xb8\xdb\x6f\x4b\x51\x78\x77\x0b\xfd\x9d\xde\x37\xab\xa6\xb9\x7b\x21\x9a\xf5\x6e\x31\x2e\x92\x33\x2a\x9e\xea\x32\xd3\xf9\xb6\xd3\x62\xab\x4a\xbb\x29\x97\x1a\x0a\x34\x18\x86\xe1\x1b\x06\xe4\x65\x3e\x5e\xc4\xa6\xf9\x7b\x17\xb9\xff\x83\xed\x41\xec\x3d\xb0\xed\xaa\x39\xa2\xda\x4e\x07\x18\xed\x9a\x43\x8d\xb4\xb4\xaa\x66\xfe\x82\x5f\x51\x97\x9a\x33\x3a\x3c\x20\xc7\x95\x0e\x76\xd0\xaa\x4b\xa3\x69\x6a\xdc\x8d\x4f\x67\x3e\x3a\xe2\x6d\x85\x47\x79\x82\x95\xf6\x20\xf1\x42\x59\x9a\xfd\xff\x3f\x10\x65\xed\xfb\xec\x4a\x72\x62\xaa\x3b\x9b\xf5\x30\xe3\x15\x3b\xa1\x01\x3b\x96\x95\xb8\x0f\x6f\x1d\xcd\xef\xb5\x75\x46\x56\x74\x31\xb5\x56\xa1\xd7\x24\x4c\x4f\x11\x5f\xc6\x9f\x07\x7d\x11\x1f\x33\xfd\x81\x26\xed\xee\x11\xcd\x5a\x72\x5c\x8c\x69\x7d\x0e\x56\x67\x96\x1b\x99\xa1\x19\x42\xde\x6f\x30\x1f\xc2\xfc\x2e\x57\xd2\x0d\x81\xfe\xd2\xae\xb9\xfa\xe4\x70\x39\x66\xfd\x55\xfa\x4f\x8d\xf6\x4c\x55\x8a\xf4\x32\xe1\x33\x4e\xb0\xb7\x70\x5e\xb7\x37\xf0\x9a\xdf\x75\xf6\x20\x3d\xe4\x84\x3e\x2d\x3c\x7a\x4a\xd2\x28\x61\xb3\x19\x46\x37\x51\x2c\xa2\xc9\x24\x9a\xcf\xb3\x2c\x49\x92\x9b\xf8\x26\x8e\xd3\x64\x9e\xa7\x53\x14\xd9\x5c\x0c\x55\x4a\x26\x53\xf8\x45\x2a\x85\xdb\x21\xe4\x2c\x8a\x2e\x44\x4e\xc2\x09\x7c\x26\x96\xcc\x60\x49\x58\x49\x55\x3b\x3a\x88\xd9\xf2\xcc\x3b\x9f\x92\xe2\xfd\x59\x4d\x05\xff\x28\x50\xe4\x73\x91\x24\x9c\xc5\x29\xe2\x64\x2e\xe2\x4c\x20\x4f\xa7\xd3\x8f\xe9\x0c\x67\x22\x4e\x39\x1b\x64\xf5\x62\x06\x26\xd1\xa5\xb8\x0b\x0b\x32\x10\xb8\x01\x8b\xf4\x39\x9a\xbf\x91\x56\xf2\xf7\xcf\x31\x05\xfc\xd1\x72\x74\x84\x75\x6f\xf7\xbe\x0b\xff\xd5\xdf\x71\xff\x06\x00\x00\xff\xff\x0e\x3e\xf0\xe5\xb7\x0b\x00\x00")

func componentsProviderJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsProviderJs,
		"components/provider.js",
	)
}

func componentsProviderJs() (*asset, error) {
	bytes, err := componentsProviderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/provider.js", size: 2999, mode: os.FileMode(436), modTime: time.Unix(1455282047, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsSubscriberJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x52\xbd\x6e\xe3\x30\x0c\xde\xfd\x14\xbc\x2c\xe7\x0c\xb1\x71\x77\xdb\x35\xc9\x52\x74\x6c\x87\xf6\x09\x14\x99\x89\x05\x28\xa2\x40\x52\x71\x83\x22\xef\x5e\xc9\x71\x51\x1b\x9d\xec\xef\xc7\xdf\x47\xd1\x6a\x5b\x78\x4b\x07\xb1\xec\x0e\xc8\xe0\x04\xb4\x47\xb0\x14\x14\x83\x42\x34\x27\xcc\x84\x51\xe8\x9c\x44\x6f\xae\x02\xa2\x46\x05\xcc\x81\x92\x8e\xd6\x24\xc8\x02\x36\x31\xe7\x0f\xaa\x9c\x26\xf7\xb4\xa8\x8e\x42\x36\x86\x0e\x8c\xf7\x34\x08\x5c\x0c\x3b\x4a\x02\x14\x91\xcd\x5d\xa5\x50\x32\xce\x4d\x95\xb5\xf9\x18\x3b\x78\x45\x63\xb5\xb1\x8c\x46\xf1\xd1\x1b\x91\xfa\xa3\x02\xc8\x1d\x1d\xf2\x7f\x38\xa6\x60\x4b\x42\xbd\x86\x42\x03\x94\x53\xf4\xc4\x0a\xd6\xb1\x4d\x4e\x27\xa7\x0b\x27\x70\x47\x18\xf0\x37\x23\x04\xd2\xa9\x10\x34\x29\xb1\x33\x7e\x3c\xe0\x18\x90\x5d\xb5\xf6\x4e\x9a\xc8\x14\xa5\xe9\x5d\x87\x5f\xd9\xa5\x56\x13\x07\x08\xc9\xfb\x91\xb9\x55\x33\xb6\x9e\x4c\xdb\xce\x5d\xf6\xd3\xfb\x1d\x81\x2d\x83\xbf\x98\x33\xee\x56\x4c\xc3\xea\x5b\xfd\xa9\x5b\xf2\x1b\x7f\xda\xfc\xf9\xbb\x70\x65\x5f\xff\x6f\xff\x7c\x5d\x2e\xf5\xd7\xb6\xcd\xec\x3c\xac\x5d\x76\xcf\xe1\x0c\xac\x1f\xaa\x32\xfb\x2d\x3f\x07\x17\x3a\x1a\x9a\xc5\xca\x67\x20\xaf\xf3\xe9\x3d\x92\xe0\x74\x1b\xce\x91\x42\xf9\xbd\x9f\x01\x00\x00\xff\xff\x1e\x66\x5a\x2c\x2d\x02\x00\x00")

func componentsSubscriberJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsSubscriberJs,
		"components/subscriber.js",
	)
}

func componentsSubscriberJs() (*asset, error) {
	bytes, err := componentsSubscriberJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/subscriber.js", size: 557, mode: os.FileMode(436), modTime: time.Unix(1455281939, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsTutorialJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x53\x4f\x6f\xdb\x3e\x0c\xbd\xfb\x53\xf0\xd7\xcb\x2f\x05\x5a\x07\xdb\x6e\x5d\xdb\x61\x7f\x7a\xc8\x65\x18\xb6\x0e\x3b\x2b\x16\x1d\x11\x53\x44\x43\xa4\xeb\x06\x43\xbf\xfb\xa8\xd8\x69\x6c\xec\x14\x89\x7c\x79\x7c\x7a\x7c\x5e\xaf\xe1\xb1\x57\xce\xe4\x22\x90\x80\x06\x84\x86\x93\x62\x52\xe8\xdc\x0e\xad\xe0\x14\xf0\xb9\x8b\x8e\xd2\xd8\x7e\x72\x99\xb8\x17\x83\xed\x3b\x4e\x06\x14\xe0\xf6\xd8\x91\x83\x28\xee\xeb\xca\x38\x37\x0a\x12\xb8\x8f\x1e\xb6\x78\xec\x79\x6c\x5d\x1f\xe7\xa4\xe4\xc1\x93\x18\xf1\x01\x3d\x0c\x01\xd3\x88\x73\x41\xb6\xec\xb2\x87\xc8\xce\x0b\xf4\x5d\x5d\xd9\xc4\xb3\xc8\x3b\xf8\x8e\xae\xd1\xba\xc9\xe8\x14\x3f\x47\x27\xb2\xfa\x53\x01\x64\x4c\x1e\xf3\x0d\xb4\x7d\x6a\x94\x38\xad\x2e\xa1\x94\x01\x4c\xcd\x8f\xc0\x59\xa1\xa1\xdc\xf4\xa4\x13\x92\xd2\x0e\xa8\x85\x01\xff\xcf\x08\x89\x15\x78\x14\xa0\xa7\x41\x45\xe9\x91\xc0\x50\x2b\x0d\x24\x75\x97\xb9\x93\x3a\x90\xc7\x13\x77\x19\xab\x7d\x4e\x90\xfa\x18\x8f\x95\x97\x6a\x56\x5d\x4d\xa0\x5b\x4f\x4f\xf7\xd3\x79\xbc\x41\x53\x84\x7f\x75\x7b\xbc\xbb\xc8\x3c\x5c\x9c\xbb\xff\xf6\x1b\x8e\xd7\x71\x77\xfd\xe6\xed\x02\x65\xb8\xf0\xee\xfe\x17\x46\xdb\x83\xa9\x66\x78\x30\xf5\xf9\xe3\xb7\x8d\xfc\x77\xbb\xb6\xce\x02\xfa\x68\xf2\x41\xf0\x68\x0c\x98\x05\xb8\xef\xf4\x00\x2d\x0f\xf6\xf2\x01\x56\x03\x0f\x57\x76\xb2\x95\x91\x5e\x41\xa6\x5d\xd0\x0f\x70\xf3\xe5\xb2\x86\x4f\xbd\x16\xfc\x94\x0c\x5b\x56\x83\x81\xa3\xd9\xb7\xa0\x6f\x39\x4f\xcb\x93\x30\x2e\xef\xd5\xc5\x21\x50\x13\x4e\x59\xe8\x32\x4a\x49\x56\xc1\xfe\xdc\xcc\x13\xe4\x92\x2f\x55\xca\xd0\x0b\xd6\x0b\xf2\x73\x94\x38\xc5\x43\xc9\xd3\x90\x49\x2d\xa1\xe0\x5a\xc5\x71\x70\xc6\xbd\xe5\xd3\x64\x9d\xa2\x78\x56\x62\x31\x69\x02\xda\x04\x85\x88\x4e\x14\xdc\x82\x5d\x29\x19\xa7\x3d\xd1\xfe\x28\xea\xb6\x14\xc9\x9c\x31\x3b\x5d\x8c\x66\x8d\xf3\xbe\x04\x45\x2c\x6d\x98\x4c\xc6\x59\x2a\x44\xfa\x8d\x32\x97\x7a\xbb\x5e\xae\x79\x7e\x9d\x5d\x2e\xdf\x57\x25\x26\x2f\xf6\x3b\x98\x66\x1e\xea\x59\xb6\x5f\x8f\x96\xda\x87\xe7\x8e\x05\xa7\x4f\x72\x72\xaa\xfa\x1b\x00\x00\xff\xff\x33\x69\x3a\xe6\xb0\x03\x00\x00")

func componentsTutorialJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsTutorialJs,
		"components/tutorial.js",
	)
}

func componentsTutorialJs() (*asset, error) {
	bytes, err := componentsTutorialJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/tutorial.js", size: 944, mode: os.FileMode(436), modTime: time.Unix(1455281884, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dashboardJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\xdb\x8e\xdb\x36\x13\xbe\xf7\x53\x4c\xf4\xff\x40\x6c\xd4\x92\x52\x14\xe8\x85\x23\x1b\x68\xd2\x04\xd8\x8b\xb6\x8b\x6e\xfa\x00\xb4\x34\xb2\xb8\x4b\x93\x2a\x49\xad\xbd\x58\xf8\xdd\x3b\x43\xc9\xb2\x7c\xec\xb6\xbd\xb1\xcd\xe1\x1c\x3e\xce\xd9\x69\x0a\x3f\x0b\x57\x2d\x8d\xb0\x05\x48\x07\xbe\x42\x40\xed\xa5\x45\xd8\xe0\xb2\x16\x2b\x84\xdc\x68\x4f\x24\x30\x65\xb8\xfd\x42\x1f\xf6\xa7\xfb\x3b\x07\x85\xa8\x5c\x10\x4c\xe0\xce\x83\xab\x4c\xa3\x8a\x11\x29\x5c\x1b\x92\x36\x16\x14\x3a\x07\x4b\x84\xb2\x51\xea\x05\x1c\xaa\x32\xe8\x12\x52\x63\x31\x85\x8d\xf4\x15\xd4\x68\x2b\x51\x3b\x10\x50\xe2\x06\x70\xeb\xd1\x6a\xa1\xa0\xb6\x86\x6e\xbc\x44\x97\x90\x42\xd6\x79\xdf\x53\x66\x7c\x04\x10\xb5\x6c\xac\x9a\xc1\x27\xe1\x10\x6a\x41\xba\x4a\x32\xc9\x00\x09\x1b\x88\x3c\x67\xe3\x31\x38\x6f\xa5\x5e\x8d\x9e\x85\x1d\xbc\x73\x0e\xbf\xa3\xc8\x7d\x92\x5b\x14\x1e\x3f\x2b\xe1\xdc\xf8\x75\x04\xb0\x42\x7f\xa7\xa5\x97\x42\x3d\x78\xba\x98\x11\x72\x9d\x7b\x69\xf4\x78\x02\x7c\x0f\x60\xd1\x37\x56\x77\x07\xa0\x37\x85\xeb\x19\x44\x52\x17\xb8\x8d\xa6\x1d\x9d\xc0\xfd\xa6\x15\xbd\x73\x06\xde\x36\x38\x65\xc2\x57\x21\x55\x63\x89\x12\x45\xbb\x8f\xc4\xb7\x9b\x8e\xe8\x53\x19\x51\xdc\xb1\xec\xac\x95\x1c\x5a\xa4\xd7\x48\x97\x38\xf4\x01\xcd\xf8\xf5\xd4\xda\x6e\xf2\x91\xb5\xb4\x4a\xc8\x41\xcf\xb2\x40\x3b\x7b\xb3\x92\xba\x93\x38\xd6\xf3\xd0\x2c\x5d\x6e\xe5\x92\x35\xbd\x4d\x8f\xeb\x25\x8e\x35\xfd\x22\xec\x13\xfa\xd9\x3f\x78\xd6\x3a\x48\xec\xb5\x8c\x82\x1f\x3f\x0b\xa5\x06\x48\x28\xe6\x53\x70\x4d\x08\xef\x3e\x28\xff\x4f\xc4\xa3\xd8\x8e\x5f\x43\x3e\x04\x86\x42\x78\xf1\xed\xa5\x26\x67\xbf\x7f\x74\x46\xbf\x9f\x42\x2e\xf2\x8a\x03\x2a\x94\xc3\x7d\x94\x3a\x35\x03\xed\x2c\x37\xe9\xa3\x0b\x20\x4b\x18\xb7\x68\x19\x6a\x72\x88\x22\xcc\xe7\x6c\x69\xc8\x0b\xa7\xef\xfa\xbb\x24\x98\x7c\xec\x65\x77\xfd\xaf\x0e\x53\x8b\xa4\xa3\xee\x92\x25\x05\x3c\x00\x99\xec\xb1\xa3\xb5\x66\x18\xa1\x6d\x65\xc9\x2f\x64\xb8\x71\x53\xbe\x1c\x22\xbb\x8e\xab\x75\xc7\x11\x30\x7a\xd5\x10\x19\x15\xac\x33\x0a\x93\x60\xaf\xf3\xfe\xc1\x4a\xe2\xcd\x43\x28\xb0\xf1\xa4\x97\x19\xa2\x0d\xa4\x56\x5d\x48\x0b\x8b\xba\x38\x4d\xac\x61\x5d\x8d\x3b\x1d\x59\x21\x9f\x17\x3d\x86\x4c\x8b\x67\xc8\xb9\x4a\x7f\x15\x6b\x9c\x47\x74\x5c\x52\x3d\xb7\x5f\x71\x29\xb7\x58\xc4\xde\xd4\xd1\x62\x10\x0b\xd6\x30\x94\xd9\x37\x1e\x7b\xc4\x75\xce\xd7\x29\xad\x50\x14\x67\xbc\xc4\x2d\x2e\xf0\x2e\xad\xd0\x45\x04\x95\xc5\x72\x1e\xfd\x2f\x02\xa3\x3f\x2b\x99\x3f\xcd\x5f\x83\xdf\xfb\x02\xdf\x2d\x42\xe7\xe4\xf6\xe4\xb2\x54\x9c\xc0\x48\x8f\x5e\x7c\x03\x59\x6e\x94\xa2\x8e\xc9\x6d\xb9\xfd\x71\x0e\xb2\x51\x27\x72\x7b\x57\xd1\xd7\x19\x37\xf1\x2b\xb9\xa0\x87\xdd\xc0\xbf\xef\x2d\xbb\x45\x26\x87\xaa\x4b\x6a\xdb\x22\xce\x95\x69\x8a\xb8\xa9\x99\x33\x5a\x64\xa9\x5c\x40\x27\x50\xf0\x3b\xb3\x94\xf4\xff\x0b\xa3\x87\x46\x74\xcb\x6c\x61\x36\x7a\x60\xb8\x17\xfa\x4f\xa6\xdb\xce\x75\xd9\x2c\x8d\xb9\xba\xa6\x8c\x8f\x97\xc2\x71\xb3\x6a\xed\xb6\x12\xd7\x6c\x66\x69\xa3\xce\x68\x97\xc3\x6b\xe5\xaa\xf2\x97\x82\x14\x92\x07\x9b\x35\x17\x31\xcd\x4b\x6a\x78\x1d\xe0\xae\x47\xee\xba\x89\xd8\x51\x79\x82\x86\x3b\x22\xc1\x77\x10\xa5\xd8\xc9\x47\x3b\x2a\xb6\xd2\xa2\xab\xe6\xaf\xdf\x7f\xf8\xf0\x61\x97\x9e\xa3\x3d\xcf\xc5\x53\xd2\x09\x21\x4b\x09\xfe\xe0\xf8\xa6\xe2\xcb\x3e\x89\xfc\x89\x1a\xc2\x17\x6e\x2d\x50\x51\xbe\x74\xd8\xfb\x66\xdb\xb6\x29\x46\x38\x14\xfb\xd6\x78\x63\x69\x46\x9f\x8b\x74\x93\x04\xde\xcd\xfb\x11\x79\xf4\xba\x6c\x9f\xc8\xb7\x45\x0f\x83\xf1\x58\xfa\x90\x91\xb7\xe5\x87\x03\xf1\x58\x43\x9b\x26\xb7\xa5\xf7\x43\x30\x1d\xba\x77\xe0\xed\xc1\xa1\x6d\xac\x23\x6e\xb0\x1b\x7a\xaf\xd9\x24\xc3\x1d\xe7\xf0\x9b\x16\xa6\x2f\xdb\xda\x50\xd3\xe0\xfd\x28\x37\xeb\xda\x68\xda\xe8\x46\xbc\x49\x1d\x05\x41\xf2\x26\xf6\xc7\xdd\x81\x05\x0a\xe9\x6a\x25\x5e\x28\xe1\x41\xe8\x76\xea\xc0\x9a\x06\x14\x2f\x86\x9b\x0a\x35\x53\xc3\xc2\x45\x09\xc9\xea\x2c\xfe\xd9\xa0\xf3\x54\x29\x52\xb9\xb0\x92\x39\xb3\x46\x22\x0b\x9a\xc3\x61\x4f\x24\x1b\x8f\x0d\x71\x08\x70\x72\x5d\x2b\x84\xa8\x10\x7a\x45\xbe\x02\xa1\x68\xc3\x4b\xe0\xab\x5c\x35\x61\x69\x23\x75\xa6\xf1\xad\x19\x6f\xf6\x50\x40\x92\xac\x2e\x3a\x32\xaf\xab\x01\xd4\x46\x38\xb2\x42\xb3\xea\x19\x8b\x70\x4f\x6c\xb9\xe6\xf5\x93\xbc\x5d\xa0\x66\x6d\x64\x5a\x61\xe9\x59\x19\x0b\x36\x0e\xed\xd5\xfd\x92\x63\x34\x83\xaf\x4a\xac\xd8\x52\xe8\xdc\x24\xc6\x54\x5e\x6d\xa9\x0b\x6c\x06\xc6\x63\x58\x1a\xa3\xc2\x96\x79\xe4\xcf\x6b\x8b\xe6\xd5\x39\xd8\x2f\x1c\x6d\xfd\xb2\xb9\xc3\x24\xef\x86\xa4\xa6\x75\xba\x1d\xac\xd7\x46\xe7\xb0\xf6\xac\xd9\x44\xb7\x2a\x53\xc5\x6a\x15\xff\xc0\x6d\xec\xb8\xa2\x2f\x33\xfe\x78\x73\xc8\x86\x00\xb6\x61\x8c\xdb\xa0\x82\xa7\x9d\x3e\xce\x29\x93\x38\xc0\x96\x36\x89\x8e\xeb\x74\x0c\x5f\xe8\xb4\xb8\x25\xd2\x5a\xb0\x7f\x62\x5a\x32\x48\x9f\xc2\xae\xdd\x66\xb4\xd6\x1b\xbd\x5a\x74\xce\xa6\xbf\x26\x25\x77\x8a\x77\x59\xda\x5d\xc0\xbd\x42\xfe\x63\x40\x4b\x5f\xfe\xb4\x5f\x62\x42\x3a\x16\xe8\x39\x35\x93\x24\xb9\xd5\xce\xae\xd4\x5b\x5f\x6e\x7f\x05\x00\x00\xff\xff\xcf\x37\xe5\x57\x37\x0d\x00\x00")

func dashboardJsBytes() ([]byte, error) {
	return bindataRead(
		_dashboardJs,
		"dashboard.js",
	)
}

func dashboardJs() (*asset, error) {
	bytes, err := dashboardJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dashboard.js", size: 3383, mode: os.FileMode(436), modTime: time.Unix(1455282975, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4f\x4f\xe3\x3e\x10\xbd\xf3\x29\xfc\xf3\x05\x90\x88\xdd\xf2\xef\x87\xd8\xa4\x12\x0b\x3d\x70\x58\x81\x56\xbb\xd2\xee\xd1\xb1\xa7\x8d\x8b\x63\x07\x7b\x92\xd0\x6f\xbf\x76\xd3\x22\x40\x5a\xc4\x8a\xa8\x87\x8e\xc7\x9e\xf7\x32\xe3\x37\xe3\xfc\xbf\x9b\xbb\xeb\x1f\xbf\xef\xe7\xa4\xc2\xda\xcc\xf6\xf2\xf4\x47\x8c\xb0\xcb\x82\x82\xa5\xb3\x3d\x42\xf2\x0a\x84\x4a\x46\x34\x6b\x40\x41\x64\x25\x7c\x00\x2c\x68\x8b\x8b\xec\x82\xbe\xdc\xaa\x10\x9b\x0c\x1e\x5b\xdd\x15\xf4\x57\xf6\xf3\x2a\xbb\x76\x75\x23\x50\x97\x06\x28\x91\xce\x22\xd8\x18\x77\x3b\x2f\x40\x2d\xe1\x55\xa4\x15\x35\x14\xb4\xd3\xd0\x37\xce\xe3\x8b\xc3\xbd\x56\x58\x15\x0a\x3a\x2d\x21\xdb\x2c\x8e\x88\xb6\x1a\xb5\x30\x59\x90\xc2\x40\x31\x8d\x40\x03\x12\x6a\x34\x30\x9b\x63\x05\x9e\x5c\xdd\xdf\x06\x72\x23\x42\x55\x3a\xe1\x55\xce\x87\xbd\xed\x41\xa3\xed\x03\xf1\x60\x0a\x1a\x70\x6d\x20\x54\x00\x91\xb3\xf2\xb0\x28\x68\xca\x21\x5c\x72\x2e\x95\x5d\x05\x26\x8d\x6b\xd5\xc2\x08\x0f\x4c\xba\x9a\x8b\x95\x78\xe2\x46\x97\x81\x97\xce\x61\xe8\x05\xca\x8a\x9f\xb0\x13\x76\xce\x83\x11\x08\x83\x1b\xbd\x68\x58\xad\x2d\x93\x21\xec\xb2\x1c\x81\x72\x11\x6b\x92\x89\x1e\x82\xab\x81\x9f\xb2\x33\x36\xe1\x91\xe0\x95\xfb\x05\xeb\x40\x1b\xa4\xd7\x0d\x92\xe0\xe5\x87\x69\x3c\x08\x89\x7c\xc2\xa6\xa7\xec\xff\x61\xc1\x56\x11\x30\xe7\x03\xd6\x6c\x44\xe0\x4c\xb9\x7a\x24\xf0\x52\x94\x60\x32\xe9\x3c\xf0\x33\x76\xc1\x8e\x4f\x78\xe9\x5d\x1f\xc0\x6f\x4a\x32\x0e\xc7\xea\xb1\x05\xbf\xe6\xc7\x6c\xca\xa6\xdb\xc5\x88\xe8\x75\xbc\x3f\x9b\x6a\x9d\x08\xa6\xec\x78\xe7\x18\x8f\x01\x7b\x8d\x08\x3e\x7b\x16\xe9\x56\xba\xab\xf0\x46\xb7\x6f\xe9\x72\xbe\x1b\x02\x79\xe9\xd4\x9a\x6c\x24\x5c\xd0\x46\x28\xa5\xed\xf2\x92\x9c\x9f\x36\x4f\x64\x92\x7e\x3b\xb9\x2b\xdd\x11\xad\x0a\xba\xed\xe3\x04\x17\x5d\x6f\x54\x89\xeb\x26\xa2\x20\x3c\xe1\x70\x7d\x74\xc8\x86\xc7\xaf\x6e\x9c\x8d\x61\x81\x43\x6a\x66\x68\xdf\x53\xc9\x07\x50\xb0\x45\xe7\xe3\xc4\xf8\x1c\x4a\xe3\x5d\xa7\x55\x54\xd4\xa7\x50\x42\x5b\xa6\xc3\xe5\x67\x71\x6a\xe1\x1f\xe0\xbd\xd6\xfc\x1b\x86\xda\x0d\xc5\x7f\x89\x1d\xb6\x09\xf9\x9e\xda\xf6\xe6\xee\x1b\xf3\x60\x63\x29\x0e\xf2\xe7\x11\x4b\x44\xa3\x5b\x1f\xe7\x1b\x8f\x06\xef\x26\x94\xcf\x8e\x88\x72\xb2\xdd\x88\x78\x09\x38\x37\x90\xcc\xaf\xeb\x5b\x75\xb0\xbf\xd5\xc5\xfe\xe1\xe1\x97\x81\xf8\x95\xda\x92\xc8\xe2\x63\xc4\x87\x47\xe9\x4f\x00\x00\x00\xff\xff\xa6\xfb\x3c\xdf\xa5\x06\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 1701, mode: os.FileMode(436), modTime: time.Unix(1455282742, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"components/ethereum.js": componentsEthereumJs,
	"components/market.js": componentsMarketJs,
	"components/provider.js": componentsProviderJs,
	"components/subscriber.js": componentsSubscriberJs,
	"components/tutorial.js": componentsTutorialJs,
	"dashboard.js": dashboardJs,
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"components": &bintree{nil, map[string]*bintree{
		"ethereum.js": &bintree{componentsEthereumJs, map[string]*bintree{}},
		"market.js": &bintree{componentsMarketJs, map[string]*bintree{}},
		"provider.js": &bintree{componentsProviderJs, map[string]*bintree{}},
		"subscriber.js": &bintree{componentsSubscriberJs, map[string]*bintree{}},
		"tutorial.js": &bintree{componentsTutorialJs, map[string]*bintree{}},
	}},
	"dashboard.js": &bintree{dashboardJs, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

