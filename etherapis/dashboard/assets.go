// Code generated by go-bindata.
// sources:
// assets/components/ethereum.js
// assets/components/market.js
// assets/components/provider.js
// assets/components/subscriber.js
// assets/components/tutorial.js
// assets/dashboard.js
// assets/index.html
// DO NOT EDIT!

package dashboard

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _componentsEthereumJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x58\x5d\x6f\x1b\xb7\x12\x7d\xd7\xaf\x20\x04\x5c\x5c\xe9\xc6\x5a\xd9\x17\xc8\xc5\x85\x6c\xb9\x68\xd3\x02\x31\xd0\x04\x46\x92\x3e\x05\x79\xa0\x76\xb9\x16\xe3\x5d\x72\x4b\x52\x92\x5d\x43\xff\xbd\x67\x48\xee\xa7\x25\xdb\x49\x1f\xe2\x07\x4b\xe4\xce\x1c\xce\xc7\xe1\xcc\xac\xe6\x73\xf6\x9b\x5b\x0b\x23\x36\xe5\x47\xc7\x9d\x65\xd2\x32\xce\xfe\xb8\x62\xa9\x2e\x2b\xad\x84\x72\xcc\xad\xb9\x63\x99\xb4\x55\xc1\xef\x2d\x56\x82\x89\xa8\xc1\x94\x70\x3b\x6d\x6e\x99\x85\xea\x06\xba\x2a\xd7\x76\x04\x48\xad\xbc\x5c\xc9\xa5\x62\x8a\x6f\xe5\x0d\x77\x12\x7b\x2b\x6e\x12\x76\xe5\x58\x21\xad\x0b\x48\x6a\x53\x0a\xc3\x74\x8e\xe3\x94\x12\xa9\x13\x19\xab\x84\x30\xf6\xc4\x3f\x4d\x37\xc6\xc0\x02\x42\x5c\x15\x3a\xbd\x25\xf1\x15\xe4\xb9\xca\xfc\x73\x6e\x8c\xdc\xf2\x82\x39\x59\x0a\x02\xa1\xbd\x82\x5b\x17\xa4\x13\xe8\x91\xea\xb5\xd1\x95\x30\x4e\x0a\xbb\xa0\x25\x63\xfc\x2b\xbf\x5b\xe0\x93\xfd\x7c\x7d\xc5\x8c\xf8\x73\x23\xac\x03\x6a\xf3\x37\x63\xf9\x46\xa5\x93\x8d\x29\xe0\x98\x91\xea\xe6\x84\xd9\x4d\x9a\x0a\x6b\xc3\x83\x8c\x3b\xce\xbe\x5a\xad\x92\x0f\x7c\xf7\x0e\xdb\xfc\x46\x4c\xa7\x11\xbb\x92\xd0\x5b\x04\xec\x26\x4e\x42\x65\x95\x96\x88\x25\xb0\x03\x64\x90\x36\x22\x37\xc2\xae\x17\x2c\xc4\x3e\x2e\x11\x47\xd8\x43\x8e\xcd\x82\x6b\x88\x62\x29\x0b\x44\x4d\x20\x4c\x99\x1d\x6d\xb9\x19\x64\x6d\xc9\x3e\x08\x9e\xba\x24\x35\x82\x3b\xf1\x06\x41\xb0\x93\x87\x11\x63\x38\xe5\x46\xb8\x2b\x25\x9d\xe4\x05\x89\x0a\x66\x45\x8c\xfd\x5f\xc2\x68\x86\x53\xe0\x7e\x1d\xbc\x26\xe9\x09\x74\x07\x8a\x0b\xef\x3c\xe5\x71\x32\x65\x84\x4d\xe6\xbb\x8d\x51\x71\xc1\x98\xbd\x57\x29\x5c\xa3\xd0\xe6\xbc\xb0\xe2\x24\xee\xbb\x35\x79\xa5\x8b\x6c\xc1\xce\xfe\x7f\xca\xfe\xc3\xce\x4e\x4f\x4f\xeb\x87\x3e\xdd\x3e\x1b\xec\xf3\x97\x7a\x73\x2d\x78\x16\xf6\x90\xf2\xa2\x08\xdb\xfb\x73\x7c\xec\x4f\x82\x57\x8d\xa5\xbf\xca\xec\x9d\xde\x20\xb4\x92\xf8\xb7\xd5\xb7\xa0\xd0\x6e\x2d\x02\x01\x23\x2f\x5b\x2e\xe7\x52\x49\xbb\x86\xc3\x85\xe6\x19\x6c\x25\x3a\x06\x40\x88\x9a\x18\x18\xb0\x45\xea\x4c\xa6\x48\x40\x9d\x11\xc4\x47\xd2\xe5\xa0\xc4\x28\x5e\x78\x60\x01\x3e\x5b\x9c\x16\xc9\xbe\xe2\xe9\x2d\xf2\x4c\x89\xa7\xe8\x3d\x32\xf0\x40\xfc\xdc\x5a\xda\x24\x1e\xf1\x31\x04\x6f\x32\x3d\xa7\x0c\x5d\x45\x06\x4c\x0e\x88\x9c\x04\xbd\x0a\xb4\x6e\x1e\x4d\xcf\x1f\x01\x5e\x53\x60\x9f\x82\xbb\xae\x2f\xda\x0b\xc0\xde\x22\x21\x4f\x61\xd1\xf3\xa3\x50\x75\xce\xfa\x6e\x10\x7b\x8c\x14\x5b\x11\x82\x4e\xe4\x89\xf9\x9a\x03\xe2\xc6\xd0\x75\x8b\xb4\xac\xb9\xce\xd2\x42\x46\x72\xf6\xb1\x8e\xc5\x36\xd8\x42\xf7\x7d\xd2\x5d\xfb\x3b\xca\x5e\xb1\xf1\x3c\x52\x76\x7c\xd2\x02\xc4\xad\x69\x43\x6b\xaf\x09\xc7\xfd\x2d\x98\x3c\x34\x2c\x8f\x5f\xf6\x31\x5c\xfb\x64\x25\x55\xe6\xcf\x99\x1e\x72\xdb\x87\x7b\xe0\x34\x15\xc2\x03\xd5\xcf\x17\x38\xa9\xbe\x62\xcb\xcb\x95\x44\x3c\x1d\xd0\xbc\x9a\x4e\x1b\x0e\xe6\xda\xa0\x3a\xad\x66\x2d\xc7\x3d\x49\x2b\x1c\xe4\x8b\x6e\x27\x58\xd7\xe1\xaa\x7d\x67\xa8\xbc\x65\xdd\x40\x51\x19\x04\xc4\x30\x3e\xf1\x42\xd3\x53\x84\xe6\xd9\xb0\x10\x73\x06\x51\x89\x65\xdf\x57\x81\x58\xf8\x87\x44\xf0\xbb\xe9\x1a\xfd\xa5\xe3\xdf\x5b\x5f\x35\xbe\xd3\x3d\x3a\xac\xeb\x1d\xad\x8f\x72\x20\xd4\x27\xfa\x5f\x67\xbf\x77\x8c\xd2\xc4\x8d\x49\xa9\x4b\xb8\x31\x99\x26\x99\xcc\xf3\xb8\x4a\x36\x4a\xde\x79\xf0\x84\x4a\x3b\x72\x58\x56\xd3\x29\xbb\x5c\xc6\x23\x08\x3f\x69\x0a\xe6\xf3\xd4\x52\x19\x3a\x57\x5e\x70\xe7\x84\xb2\xfd\x18\xd9\xd0\xcf\xc1\x1c\xea\xe7\x46\x54\xda\x80\x6c\x2b\xcf\xaa\x10\x35\x52\x3e\x5e\xd6\x27\xd1\xb1\x8b\x4c\x6e\x71\xf3\xd0\x52\xde\xf3\x52\x2c\xc7\x68\xe8\x68\xe4\x33\x09\xca\x9a\x31\x4e\xb9\x2f\xc4\xf2\x01\x21\x91\x37\x6b\x14\xb9\xf1\xeb\xd3\xea\x6e\xbc\xdf\x5f\x8e\xea\x76\x7a\x44\xdf\x90\xfc\xb8\x15\x83\x20\x11\xf4\x0d\xd5\x4a\xf8\xe4\x69\xb4\x7c\xe8\x44\xc5\xef\xec\xe7\x3d\x8d\x5f\x88\x07\xef\xc3\x54\xe0\x39\xd1\xd3\xf0\x09\x3a\xa0\xf0\x49\x96\x2f\x92\xbf\x98\xc3\xf4\xce\x92\xaa\xcd\x75\x5d\x9b\xe2\xf5\xef\x01\xd4\x25\xc1\x53\xe3\x09\xe8\x0e\x70\xc8\xe7\x88\x78\xb4\x43\x92\xf5\x2e\x19\x76\xf6\xfe\x9a\x06\xb6\xbb\x4a\x5b\xd1\x6f\xd8\x23\x1a\x28\x7a\xf6\xbd\x64\x90\xab\x6f\x5a\xa7\xf8\xc6\xab\x36\xea\x0c\x86\x4c\xe9\x0c\xc3\x16\xe1\x35\x95\x19\x19\xa4\xb1\xc4\xcf\x70\x3e\x9f\x09\xfb\xe4\x9b\xa0\xa1\x83\xb5\x2a\xee\xeb\x93\x50\xd4\x64\x3e\x0a\x95\xcb\x88\x7f\x03\x25\x75\x1b\x5e\x40\x80\x87\x73\x01\x53\xc3\x1e\x1d\xd9\x9a\xa2\xdb\xb2\x3b\x76\x91\x5a\x35\xc8\x35\x83\xc3\xdb\xb6\x76\x4c\x70\x01\x32\x91\x4a\xf8\x20\xd1\xc6\xc3\x48\x13\x8e\x46\xed\x54\xda\x4d\xfd\x40\xd5\x0b\xde\xb1\x79\xea\xe8\x9d\x01\x72\xb7\xb0\xd4\xd6\x2d\x97\x61\x14\x6a\x2b\x49\xbc\x5c\x34\xd6\xc4\xcb\xed\xff\x93\x05\x7e\x04\xc1\xf7\x25\xab\xb8\xb1\x02\x8d\xf6\x00\x64\xe2\xa5\xf0\xc5\x33\xf9\x84\x9d\xfd\x2f\x16\x09\x42\x08\x97\xf0\x39\x84\x35\x84\x50\x79\x0e\x01\xd4\x84\x78\x1a\x20\x4a\x1d\x02\xa8\xe0\x17\x32\xfe\x0c\x40\x90\xf2\xc5\xd4\x7a\x80\x46\xff\x56\xe9\x9d\x7a\x36\x06\x5e\xaa\xa3\x7e\x3e\x6a\x0d\x68\x53\x88\x31\x13\xc3\xe6\xa4\xf6\x69\x16\x02\x3c\x65\x73\x36\x89\x81\xaa\xb7\x3a\xfa\x05\x5f\x89\x02\xca\x63\xe2\x03\xca\xd9\xa1\xec\xfa\xf2\x1d\xdf\x45\x90\xe1\xd3\x36\xbb\x8d\xf6\x55\x87\x66\x35\xca\xbe\xc1\x0a\x5e\xce\xea\x68\x5d\x3e\x86\x78\xb5\xec\x18\x19\x3d\x98\x52\xa3\x0a\xa4\x86\xdb\x63\xac\x06\x40\x5e\x60\x4e\x0f\xc2\x3e\x89\xfb\xf2\x83\x79\x57\xe4\x6e\x1c\x09\xc7\x04\x18\xf9\x8d\xe7\xf5\x00\x8e\x76\x89\xba\x19\x54\x3c\xa3\xe9\xfa\x93\xae\xe0\xfb\xd9\xeb\x67\x1a\x42\x9d\xb2\xb6\x99\xa0\xbe\x49\xba\x5e\xd0\x36\x02\xcd\x4d\x6e\x05\x7a\x73\xd3\x62\xfe\x3b\x6c\x31\xc7\x31\x67\xab\x0e\x27\x68\x31\xa3\xf7\xaf\x0a\x41\xc7\xf5\x26\x58\x66\x74\xd1\x91\x87\x44\x6b\xc6\x4e\x66\x0e\x2f\x67\x0d\xa5\x10\x8e\x7f\x0d\xce\xc5\xc9\xb6\xe2\xea\x90\xe5\x7c\x65\x75\xb1\x71\x64\x79\x2c\x85\xd8\xf4\xd1\xc4\x4e\x84\x1e\x83\xa3\x1e\xf2\xc2\x96\xa8\x89\x97\x0f\x3e\x1b\xfb\x8b\x79\x58\xe2\x13\xe0\x3d\x3f\x07\x2d\xa9\xbb\x3c\xdc\x55\x7c\x3d\xed\x34\xd6\x97\xf4\x85\xc8\x6d\xb4\x82\xa6\xde\x86\xc1\x74\xe7\x1b\x03\x37\x4d\xeb\x40\x19\x6f\x87\x57\xa7\x8f\x16\xf0\x38\x15\xfe\x1e\x07\x5e\x5a\xfa\x11\x11\x6c\xfb\xfc\x85\xcc\xf3\x35\xb8\x6b\xe7\x37\x97\xe0\x21\x21\x7d\x5e\x1e\xcf\x1d\x4e\xdc\x75\xc7\x8e\x0b\xd9\x95\xc9\x39\xea\xf5\xcc\x80\x8b\x88\xbd\xbc\x64\x0f\x9d\x5b\xef\x5d\x48\x0a\xa1\x6e\xdc\x7a\x1f\x1c\x6a\x02\xdf\xa6\x69\x10\xf9\xee\x80\xf2\x2d\x1d\xb9\x3f\xe9\xc6\x84\x1c\x8d\xae\x17\x5a\x0c\x95\xa8\xef\x05\xec\x41\x52\x67\xc1\x2c\x1f\xf2\xae\x81\x3f\x30\xe4\xc4\x05\x7a\x9d\x3e\x10\xf7\xe0\xcc\x4f\x07\x1b\x42\xf8\xa1\x27\x78\xe6\x3b\x01\x5b\xb0\xd3\x7d\xac\x59\x2f\xcc\x4e\x98\x06\x5f\x92\x1c\xff\x63\x0c\xea\x51\x45\xaf\xfd\x56\xaa\x14\xaf\xad\x64\x96\x93\x29\x26\x1a\x6e\x7a\x43\x53\x30\x7b\x87\xb1\xa9\x94\x4a\x64\xff\x2c\x77\xf5\xa1\xde\x82\x70\xf2\xa3\x24\x06\x3f\x7e\x60\x0e\x53\xb2\x62\xa6\x9f\x48\x61\xf7\x1d\xe8\x51\x16\xdb\xf7\xa1\x24\x37\xba\x7c\xaf\x77\x13\x4a\xe7\x58\xe1\xc5\xd0\xf8\x46\x2a\xb2\xf1\xfe\xe9\xa4\xfe\x1d\x00\x00\xff\xff\x91\xa2\x70\x71\xcf\x14\x00\x00")

func componentsEthereumJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsEthereumJs,
		"components/ethereum.js",
	)
}

func componentsEthereumJs() (*asset, error) {
	bytes, err := componentsEthereumJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/ethereum.js", size: 5327, mode: os.FileMode(436), modTime: time.Unix(1455465497, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsMarketJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x91\x3f\x4f\xc3\x30\x10\xc5\x77\x7f\x8a\x53\xa6\x54\xa2\xee\xd0\xad\xb4\x95\x10\x13\x03\xa8\x62\x63\x3c\xe2\x0b\x3e\x61\xec\xc8\x3e\x37\xaa\x50\xbf\x3b\x49\x08\xc8\x08\x50\x17\xff\x79\xfe\xf9\x3d\xdd\xdd\x11\x23\xdc\x63\x7c\x25\x81\x1d\x3c\x12\x36\xa2\x9b\x48\x28\x74\xeb\x30\xa5\xfa\x5d\x01\x44\xf2\x86\xe2\x06\xda\xec\x1b\xe1\xe0\xeb\x05\x8c\x32\x00\xb7\x50\x8b\xe5\xa4\xbb\x18\xba\xa4\x2d\x1b\xfa\x7a\x1a\x7f\x49\x8e\x1e\x7c\x76\x6e\x52\xce\xaa\x50\xeb\x19\xda\x1a\x3e\x42\x33\x26\x3d\xe0\x1b\xed\xaa\x0e\x3d\x39\x98\xd6\xa5\xa1\x16\xb3\x93\x6a\x3f\xb3\xff\xd0\x4b\x4b\x68\xd8\xbf\x14\xdc\x40\xda\xf5\x6f\x50\x58\x1c\x55\xfb\x9b\xc3\xdd\x5c\xf1\x76\x65\xd7\x85\xfb\x6a\xb0\xbf\x14\xf6\x1c\xcc\xe9\x47\xd2\x13\xa1\xbd\x82\x53\xc8\xd0\x73\xb2\x5a\x6b\xd8\x1c\xfe\xb6\x2c\x2e\x8b\x6b\x35\x36\xe4\x3c\xec\xaa\x67\x6f\x42\xaf\xbf\x67\xf0\x79\x50\x1f\x01\x00\x00\xff\xff\x59\x79\xb7\xe1\x98\x01\x00\x00")

func componentsMarketJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsMarketJs,
		"components/market.js",
	)
}

func componentsMarketJs() (*asset, error) {
	bytes, err := componentsMarketJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/market.js", size: 408, mode: os.FileMode(436), modTime: time.Unix(1455465483, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsProviderJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x56\x51\x6f\xe3\x36\x0c\x7e\xcf\xaf\x20\xfc\xb2\x1e\xb0\x3a\x8e\x9d\x5c\xea\x2e\xd7\x61\x18\x6e\xc3\x80\x61\x2d\xd6\x61\xef\xb2\x4c\xc5\x02\x1c\xc9\x93\xe4\xa4\xc1\x21\xff\x7d\x94\xdd\xeb\x25\x8e\x13\xa7\x45\xf7\xb0\x97\x44\x24\x3f\xd2\xf4\xf7\x51\x92\xc7\x63\x78\x30\x7a\x2d\x73\x34\x20\x2d\xb8\x02\x81\x6b\xe5\x50\x39\xa8\xd8\x12\xc9\xc1\x1c\xe4\xd2\x56\x25\xdb\x5a\xb0\x8e\x39\x0b\x2c\xd3\xb5\x6b\xa0\xb5\x45\x63\x81\xd7\xc6\x50\xc2\x88\x6a\x55\x6d\xad\x1c\x7e\x7a\xf8\xcd\x7e\xef\xcd\x27\x89\xb4\xa0\x9a\x42\x2e\x6b\xc3\x9c\xd4\x8a\x6c\x74\x3c\x1c\xad\x99\xf9\xf6\xf0\x4f\xf0\x27\x32\xee\x42\x6e\x90\x39\xfc\xb9\x64\xd6\x5e\x7d\x19\x01\x50\x65\x0a\xdf\x82\xa8\x15\xf7\xc9\x57\x1f\xc0\xbb\x01\xe8\x69\x8f\x85\x36\x0e\xb8\x34\xbc\x96\xee\x19\x29\xd5\x12\xa4\x80\x0d\x7e\x67\x10\x94\x76\xa0\x55\xd3\xaa\xab\x9d\x36\x92\x95\xcd\x6b\x35\x05\x08\x75\xe5\x0a\x69\x43\xea\xb2\xb2\x61\x41\x6d\x7c\xad\xed\x1f\xeb\x6a\xa3\x40\xd5\x65\xd9\x78\x76\xa3\x3d\xef\xd5\x33\x68\x91\xcb\xf5\xdd\xf3\xba\xb5\x80\xfb\xc6\xff\x60\x2b\xfc\x14\x18\xbd\x09\xbe\x45\x8f\xe3\x5c\x97\xd7\xe5\xf2\x7a\x12\x1f\xa0\x08\xf7\xd0\xb2\x36\xee\xb8\xff\x66\x75\xe9\x0e\x9c\x8b\xf1\x61\x03\xfb\xe6\x9e\xf1\xe1\x87\x91\x7f\x81\x1d\xfd\x6f\xa4\xca\xf5\x26\xdc\x63\xfd\x65\x49\x7c\x7e\x7e\xaa\xb4\xc5\xe7\x21\x58\x55\x5a\x79\x55\xbf\xca\xf4\xb4\x7d\xbd\x46\x3d\x7c\xf5\x30\x30\x0d\x4e\x92\xf8\x65\x4f\x20\xad\x4a\xa9\x10\x7e\x84\xa0\x62\x0a\xbd\x90\xf4\x7b\x6d\x6b\xce\xd1\xda\x00\x6e\x0f\xfd\x39\x0a\xcf\x57\xb0\x3b\x27\x41\x0b\x2d\x90\xe5\x34\x36\x5d\x19\x8a\xe4\x18\xea\xa4\x2b\x31\xb8\xdb\x6f\x4b\x51\x78\x77\x0b\xfd\x9d\xde\x37\xab\xa6\xb9\x7b\x21\x9a\xf5\x6e\x31\x2e\x92\x33\x2a\x9e\xea\x32\xd3\xf9\xb6\xd3\x62\xab\x4a\xbb\x29\x97\x1a\x0a\x34\x18\x86\xe1\x1b\x06\xe4\x65\x3e\x5e\xc4\xa6\xf9\x7b\x17\xb9\xff\x83\xed\x41\xec\x3d\xb0\xed\xaa\x39\xa2\xda\x4e\x07\x18\xed\x9a\x43\x8d\xb4\xb4\xaa\x66\xfe\x82\x5f\x51\x97\x9a\x33\x3a\x3c\x20\xc7\x95\x0e\x76\xd0\xaa\x4b\xa3\x69\x6a\xdc\x8d\x4f\x67\x3e\x3a\xe2\x6d\x85\x47\x79\x82\x95\xf6\x20\xf1\x42\x59\x9a\xfd\xff\x3f\x10\x65\xed\xfb\xec\x4a\x72\x62\xaa\x3b\x9b\xf5\x30\xe3\x15\x3b\xa1\x01\x3b\x96\x95\xb8\x0f\x6f\x1d\xcd\xef\xb5\x75\x46\x56\x74\x31\xb5\x56\xa1\xd7\x24\x4c\x4f\x11\x5f\xc6\x9f\x07\x7d\x11\x1f\x33\xfd\x81\x26\xed\xee\x11\xcd\x5a\x72\x5c\x8c\x69\x7d\x0e\x56\x67\x96\x1b\x99\xa1\x19\x42\xde\x6f\x30\x1f\xc2\xfc\x2e\x57\xd2\x0d\x81\xfe\xd2\xae\xb9\xfa\xe4\x70\x39\x66\xfd\x55\xfa\x4f\x8d\xf6\x4c\x55\x8a\xf4\x32\xe1\x33\x4e\xb0\xb7\x70\x5e\xb7\x37\xf0\x9a\xdf\x75\xf6\x20\x3d\xe4\x84\x3e\x2d\x3c\x7a\x4a\xd2\x28\x61\xb3\x19\x46\x37\x51\x2c\xa2\xc9\x24\x9a\xcf\xb3\x2c\x49\x92\x9b\xf8\x26\x8e\xd3\x64\x9e\xa7\x53\x14\xd9\x5c\x0c\x55\x4a\x26\x53\xf8\x45\x2a\x85\xdb\x21\xe4\x2c\x8a\x2e\x44\x4e\xc2\x09\x7c\x26\x96\xcc\x60\x49\x58\x49\x55\x3b\x3a\x88\xd9\xf2\xcc\x3b\x9f\x92\xe2\xfd\x59\x4d\x05\xff\x28\x50\xe4\x73\x91\x24\x9c\xc5\x29\xe2\x64\x2e\xe2\x4c\x20\x4f\xa7\xd3\x8f\xe9\x0c\x67\x22\x4e\x39\x1b\x64\xf5\x62\x06\x26\xd1\xa5\xb8\x0b\x0b\x32\x10\xb8\x01\x8b\xf4\x39\x9a\xbf\x91\x56\xf2\xf7\xcf\x31\x05\xfc\xd1\x72\x74\x84\x75\x6f\xf7\xbe\x0b\xff\xd5\xdf\x71\xff\x06\x00\x00\xff\xff\x0e\x3e\xf0\xe5\xb7\x0b\x00\x00")

func componentsProviderJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsProviderJs,
		"components/provider.js",
	)
}

func componentsProviderJs() (*asset, error) {
	bytes, err := componentsProviderJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/provider.js", size: 2999, mode: os.FileMode(436), modTime: time.Unix(1455465483, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsSubscriberJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x52\xbd\x6e\xe3\x30\x0c\xde\xfd\x14\xbc\x2c\xe7\x0c\xb1\x71\x77\xdb\x35\xc9\x52\x74\x6c\x87\xf6\x09\x14\x99\x89\x05\x28\xa2\x40\x52\x71\x83\x22\xef\x5e\xc9\x71\x51\x1b\x9d\xec\xef\xc7\xdf\x47\xd1\x6a\x5b\x78\x4b\x07\xb1\xec\x0e\xc8\xe0\x04\xb4\x47\xb0\x14\x14\x83\x42\x34\x27\xcc\x84\x51\xe8\x9c\x44\x6f\xae\x02\xa2\x46\x05\xcc\x81\x92\x8e\xd6\x24\xc8\x02\x36\x31\xe7\x0f\xaa\x9c\x26\xf7\xb4\xa8\x8e\x42\x36\x86\x0e\x8c\xf7\x34\x08\x5c\x0c\x3b\x4a\x02\x14\x91\xcd\x5d\xa5\x50\x32\xce\x4d\x95\xb5\xf9\x18\x3b\x78\x45\x63\xb5\xb1\x8c\x46\xf1\xd1\x1b\x91\xfa\xa3\x02\xc8\x1d\x1d\xf2\x7f\x38\xa6\x60\x4b\x42\xbd\x86\x42\x03\x94\x53\xf4\xc4\x0a\xd6\xb1\x4d\x4e\x27\xa7\x0b\x27\x70\x47\x18\xf0\x37\x23\x04\xd2\xa9\x10\x34\x29\xb1\x33\x7e\x3c\xe0\x18\x90\x5d\xb5\xf6\x4e\x9a\xc8\x14\xa5\xe9\x5d\x87\x5f\xd9\xa5\x56\x13\x07\x08\xc9\xfb\x91\xb9\x55\x33\xb6\x9e\x4c\xdb\xce\x5d\xf6\xd3\xfb\x1d\x81\x2d\x83\xbf\x98\x33\xee\x56\x4c\xc3\xea\x5b\xfd\xa9\x5b\xf2\x1b\x7f\xda\xfc\xf9\xbb\x70\x65\x5f\xff\x6f\xff\x7c\x5d\x2e\xf5\xd7\xb6\xcd\xec\x3c\xac\x5d\x76\xcf\xe1\x0c\xac\x1f\xaa\x32\xfb\x2d\x3f\x07\x17\x3a\x1a\x9a\xc5\xca\x67\x20\xaf\xf3\xe9\x3d\x92\xe0\x74\x1b\xce\x91\x42\xf9\xbd\x9f\x01\x00\x00\xff\xff\x1e\x66\x5a\x2c\x2d\x02\x00\x00")

func componentsSubscriberJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsSubscriberJs,
		"components/subscriber.js",
	)
}

func componentsSubscriberJs() (*asset, error) {
	bytes, err := componentsSubscriberJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/subscriber.js", size: 557, mode: os.FileMode(436), modTime: time.Unix(1455465483, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _componentsTutorialJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x53\x4f\x6f\xdb\x3e\x0c\xbd\xfb\x53\xf0\xd7\xcb\x2f\x05\x5a\x07\xdb\x6e\x5d\xdb\x61\x7f\x7a\xc8\x65\x18\xb6\x0e\x3b\x2b\x16\x1d\x11\x53\x44\x43\xa4\xeb\x06\x43\xbf\xfb\xa8\xd8\x69\x6c\xec\x14\x89\x7c\x79\x7c\x7a\x7c\x5e\xaf\xe1\xb1\x57\xce\xe4\x22\x90\x80\x06\x84\x86\x93\x62\x52\xe8\xdc\x0e\xad\xe0\x14\xf0\xb9\x8b\x8e\xd2\xd8\x7e\x72\x99\xb8\x17\x83\xed\x3b\x4e\x06\x14\xe0\xf6\xd8\x91\x83\x28\xee\xeb\xca\x38\x37\x0a\x12\xb8\x8f\x1e\xb6\x78\xec\x79\x6c\x5d\x1f\xe7\xa4\xe4\xc1\x93\x18\xf1\x01\x3d\x0c\x01\xd3\x88\x73\x41\xb6\xec\xb2\x87\xc8\xce\x0b\xf4\x5d\x5d\xd9\xc4\xb3\xc8\x3b\xf8\x8e\xae\xd1\xba\xc9\xe8\x14\x3f\x47\x27\xb2\xfa\x53\x01\x64\x4c\x1e\xf3\x0d\xb4\x7d\x6a\x94\x38\xad\x2e\xa1\x94\x01\x4c\xcd\x8f\xc0\x59\xa1\xa1\xdc\xf4\xa4\x13\x92\xd2\x0e\xa8\x85\x01\xff\xcf\x08\x89\x15\x78\x14\xa0\xa7\x41\x45\xe9\x91\xc0\x50\x2b\x0d\x24\x75\x97\xb9\x93\x3a\x90\xc7\x13\x77\x19\xab\x7d\x4e\x90\xfa\x18\x8f\x95\x97\x6a\x56\x5d\x4d\xa0\x5b\x4f\x4f\xf7\xd3\x79\xbc\x41\x53\x84\x7f\x75\x7b\xbc\xbb\xc8\x3c\x5c\x9c\xbb\xff\xf6\x1b\x8e\xd7\x71\x77\xfd\xe6\xed\x02\x65\xb8\xf0\xee\xfe\x17\x46\xdb\x83\xa9\x66\x78\x30\xf5\xf9\xe3\xb7\x8d\xfc\x77\xbb\xb6\xce\x02\xfa\x68\xf2\x41\xf0\x68\x0c\x98\x05\xb8\xef\xf4\x00\x2d\x0f\xf6\xf2\x01\x56\x03\x0f\x57\x76\xb2\x95\x91\x5e\x41\xa6\x5d\xd0\x0f\x70\xf3\xe5\xb2\x86\x4f\xbd\x16\xfc\x94\x0c\x5b\x56\x83\x81\xa3\xd9\xb7\xa0\x6f\x39\x4f\xcb\x93\x30\x2e\xef\xd5\xc5\x21\x50\x13\x4e\x59\xe8\x32\x4a\x49\x56\xc1\xfe\xdc\xcc\x13\xe4\x92\x2f\x55\xca\xd0\x0b\xd6\x0b\xf2\x73\x94\x38\xc5\x43\xc9\xd3\x90\x49\x2d\xa1\xe0\x5a\xc5\x71\x70\xc6\xbd\xe5\xd3\x64\x9d\xa2\x78\x56\x62\x31\x69\x02\xda\x04\x85\x88\x4e\x14\xdc\x82\x5d\x29\x19\xa7\x3d\xd1\xfe\x28\xea\xb6\x14\xc9\x9c\x31\x3b\x5d\x8c\x66\x8d\xf3\xbe\x04\x45\x2c\x6d\x98\x4c\xc6\x59\x2a\x44\xfa\x8d\x32\x97\x7a\xbb\x5e\xae\x79\x7e\x9d\x5d\x2e\xdf\x57\x25\x26\x2f\xf6\x3b\x98\x66\x1e\xea\x59\xb6\x5f\x8f\x96\xda\x87\xe7\x8e\x05\xa7\x4f\x72\x72\xaa\xfa\x1b\x00\x00\xff\xff\x33\x69\x3a\xe6\xb0\x03\x00\x00")

func componentsTutorialJsBytes() ([]byte, error) {
	return bindataRead(
		_componentsTutorialJs,
		"components/tutorial.js",
	)
}

func componentsTutorialJs() (*asset, error) {
	bytes, err := componentsTutorialJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "components/tutorial.js", size: 944, mode: os.FileMode(436), modTime: time.Unix(1455465483, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dashboardJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x57\x5f\x8f\x1a\x37\x10\x7f\xe7\x53\xcc\x6d\x2b\x85\x53\x61\x49\x55\xa9\x0f\x04\x90\x9a\x34\x91\x4e\x6a\xd3\xa8\x97\xaa\xcf\x66\x77\x60\x9d\x33\xf6\xd6\xf6\x1e\x9c\x2e\x7c\xf7\xce\x78\xff\xe0\x85\x83\xa4\xbd\xbe\xf5\x05\x76\xed\xf9\xf3\xb3\x67\xe6\x37\xb3\x93\x09\xfc\x2c\x5c\xb1\x34\xc2\xe6\x20\x1d\xf8\x02\x01\xb5\x97\x16\x61\x8b\xcb\x52\xac\x11\x32\xa3\x3d\x2d\x81\x59\x85\xdd\xb7\xf4\x63\x7f\xfa\x70\xe3\x20\x17\x85\x0b\x8a\x29\xdc\x78\x70\x85\xa9\x54\x3e\x20\x83\x1b\x43\xda\xc6\x82\x42\xe7\x60\x89\xb0\xaa\x94\x7a\x00\x87\x6a\x15\x6c\x09\xa9\x31\x1f\xc1\x56\xfa\x02\x4a\xb4\x85\x28\x1d\x08\x58\xe1\x16\x70\xe7\xd1\x6a\xa1\xa0\xb4\x86\x76\xbc\x44\x97\x92\x41\xb6\xf9\xa1\x5b\x99\xf2\x2b\x80\x28\x65\x65\xd5\x14\x5e\x0b\x87\x50\x0a\xb2\xb5\x22\x97\x0c\x90\xb0\x81\xc8\x32\x76\x3e\x06\xe7\xad\xd4\xeb\xc1\xbd\xb0\xd1\x39\xe7\xf0\x3b\x8a\xcc\xa7\x99\x45\xe1\xf1\x8d\x12\xce\x0d\x1f\x07\x00\x6b\xf4\x37\x5a\x7a\x29\xd4\xad\xa7\x8d\x29\x21\xd7\x99\x97\x46\x0f\xaf\x81\xf7\x01\x2c\xfa\xca\xea\xe6\x05\xe8\x4c\x61\x7b\x0a\x89\xd4\x39\xee\x92\x51\xb3\x4e\xe0\x7e\xd3\x8a\xce\x39\x05\x6f\x2b\x1c\xf1\xc2\x3b\x21\x55\x65\x69\x25\xe9\xc4\x34\x62\x7e\xfb\xa0\x33\x72\x24\x94\xc3\x7a\x79\xff\x8a\xfe\xf6\xa3\x01\xfd\x2a\x23\xf2\x1b\x36\x3c\xad\xe5\x63\x38\x74\x54\xe9\x52\x87\x3e\x40\x1d\x3e\x1e\x43\xd9\x5f\xbf\x62\x2b\xb5\x11\xba\xbd\x7b\x99\xa3\x9d\x7e\xb5\x91\xb2\xd1\xe8\xdb\xb9\xad\x96\x2e\xb3\x72\xc9\x96\xbe\xce\x8e\xeb\x34\xfa\x96\x7e\x15\xf6\x0e\xfd\xf4\x1f\x1c\x6b\x13\x34\x5a\x2b\x83\x70\xc9\x6f\x84\x52\x11\x12\x4a\x88\x11\xb8\x2a\xc4\xbe\x8d\xd8\xb7\xa9\xf8\x24\x76\xc3\xc7\x90\x2c\x41\x20\x17\x5e\x7c\x7c\x28\x29\x12\x2f\x3e\x39\xa3\x5f\x8c\x20\x13\x59\x81\xbd\x20\x40\x6b\x26\xb2\xce\x7a\xd7\x5d\xe8\x01\xe4\x0a\x86\x35\x5a\x86\x9a\x1e\x42\x0c\xf3\x39\x7b\x8a\x65\xe1\xf8\x5c\x5f\xc8\x10\x3a\x65\xa7\xbb\xef\x9e\x1a\x4c\x35\x92\x66\x75\x9f\x2e\x29\xe0\x01\xc8\x75\x8b\x1d\xad\x35\x71\x84\x76\x85\xa5\x7b\x21\xc7\x95\x1b\xf1\x66\x8c\xec\x3c\xae\xfa\x3a\x7a\xc0\xe8\x54\x31\x32\xaa\x66\x67\x14\xa6\xc1\x5f\x73\xfb\x07\x2f\xa9\x37\xb7\xa1\xfa\x86\xd7\x9d\x4e\x8c\xb6\xce\xf6\xeb\x26\xdd\x7b\xd5\xd0\x02\xe7\x25\xcc\x5b\xb8\x47\x50\x0f\xf2\xb5\x58\x64\xca\xa2\xce\x8f\x73\x34\xae\xdf\x61\x03\x67\x96\xcb\xfb\x45\x77\x9c\x99\x16\xf7\x90\x31\x1b\xbc\x17\x1b\x9c\x27\xf4\xba\x24\xde\xa8\xff\xc6\x2b\xb9\xc3\x7c\xec\x4d\x99\x2c\xa2\xb0\xb2\x85\x58\xa7\x25\x38\xdb\x93\x3a\x95\x6b\x8c\x16\x28\xf2\x13\x59\x92\x16\x4f\xc8\x2e\xad\xd0\x79\x02\x85\xc5\xd5\x3c\xf9\x26\x01\xa3\xdf\x28\x99\xdd\xcd\x1f\xc3\xbd\x74\x5c\xb1\x5f\x04\x86\x66\x1a\x74\xb3\x89\x38\x82\x31\xe9\x9d\xf8\x02\xb2\xcc\x28\x45\xcc\xcc\xf4\x5f\x3f\x9c\x82\xac\xd4\x91\x5e\x7b\x55\xf4\x77\x22\x4d\xf2\x4a\x2e\xe8\x60\x17\xf0\xb7\x34\xb5\x5f\xcc\x64\x6c\x7a\x45\xed\x41\x8c\x33\x65\xaa\x7c\x5c\x95\x2c\x99\x2c\x66\x13\xb9\x80\x46\x21\xe7\x73\xce\x26\x64\xff\x5f\x38\x3d\x70\xda\x25\xb7\xb9\xd9\xea\xc8\x71\xa7\xf4\x2c\xd7\x35\x09\x3e\xed\x96\xda\x69\x59\x52\xf1\x8c\x97\xc2\x31\xef\xd5\x7e\x6b\x8d\x73\x3e\x67\x93\x4a\x9d\xac\x85\x6c\xc0\x6a\xc3\x55\x43\x8d\x96\xc8\xb0\x41\xd0\xf0\xe7\xbe\x69\xa5\xcd\x2a\xb7\xde\xb0\x47\x4b\xf0\x1d\x24\x13\x6c\xf4\x93\x3d\x55\xcf\xca\xa2\x2b\xe6\x8f\xdf\xbf\x7c\xf9\x72\x0f\xda\x38\x2a\xbf\x46\xaf\xad\xc6\xfd\xe4\x0b\x19\x77\xb4\x30\x9b\x50\xb6\x44\xaf\x5f\x55\x4f\xb3\xd7\x22\xbb\xa3\x1a\x7f\xcb\xc4\x03\x05\xa5\x40\x83\xa2\xa3\xe2\x9a\xc4\xfa\x60\x66\xef\x8d\x67\x88\x98\xff\x29\xac\xa6\xbb\x6d\x34\xaf\x22\xd5\xf6\x18\xf0\xf9\x33\x5c\x9d\x33\x19\xdb\xfc\x58\x79\x63\x69\x62\x38\x45\xd1\xb4\x2e\xb8\x9a\x77\x3d\xb9\x0f\xa7\x4d\xf7\xcb\xaa\x87\x4e\xdc\xd7\x3e\xe4\xed\x65\xfd\xb8\x03\xf7\x2d\xd4\xc9\x74\x59\xbb\xed\xba\x93\x38\x62\x51\x00\xa3\x97\x9a\x7e\x07\x4c\xc3\x5b\x3a\xaf\xd9\xa6\xf1\xc4\x75\x78\xa6\xf1\xed\xed\xae\x34\x44\x2d\x3c\xad\x65\x66\x53\x1a\x4d\xf3\xe5\x80\xe7\xba\x5e\x5c\x25\xcf\x85\x7f\xdc\x1c\x44\x20\x97\xae\x54\xe2\x81\x43\x27\x74\xdd\xe6\x60\x43\x1d\x91\xc7\xd4\x6d\x81\x9a\x57\xc3\xf8\x47\x59\xce\xe6\x2c\xfe\x55\xa1\xf3\x54\x4f\x52\xb9\x30\x20\x3a\xb3\x41\x5a\x16\xd4\xf8\xc3\xd4\x4a\x3e\x3e\x55\x24\x21\xc0\xc9\x4d\xa9\x10\x92\x5c\xe8\x35\xdd\x15\x08\x45\xf3\x66\x0a\xef\xe4\xba\x0a\x23\x24\x99\x33\x95\xaf\xdd\x78\xd3\x42\x01\x49\xba\x3a\x6f\x96\x79\x78\x0e\xa0\xb6\xc2\x91\x17\x6a\x8e\xf7\x98\x87\x7d\x12\xcb\x34\x0f\xc3\x74\xdb\x39\x6a\xb6\x46\xae\x15\xae\x3c\x1b\x63\xc5\xca\xa1\x3d\x3b\xed\x72\x8c\xa6\xf0\x4e\x89\x35\x7b\x0a\xfc\x4e\x6a\xbc\xca\x83\x36\x71\xc5\x36\x72\x3e\x86\xa5\x31\x2a\xcc\xbc\xbd\xfb\x3c\x37\xf6\x9e\xed\x96\xdd\x84\x53\x93\x02\xbb\x3b\x8c\x0e\x4d\x2b\xd5\x34\xdc\xd7\x9d\xfc\x5c\x83\x8d\xcb\xd9\x9a\x6d\x72\xa9\xd8\xd5\x58\xad\xc7\x3f\x30\xd9\xf5\x49\xe2\x69\xc1\x1f\x2f\xb6\xe2\x10\xc0\x3a\x8c\xe3\x3a\xa8\xe0\xe9\x0b\x63\x9c\x51\x26\x71\x80\x2d\x8d\x2e\x8d\xd4\x71\xb3\x7e\x82\x8f\x71\x47\x4b\x1b\xc1\xf7\x33\xa6\xa9\x86\xec\x29\x6c\x48\x79\x46\x1f\x19\x46\xaf\x17\xcd\x65\xd3\x87\xd2\x8a\x99\xe2\x6a\x36\x69\x36\xe0\x83\x42\xfe\x4c\xa1\x29\x33\xbb\x6b\xa7\xa6\x90\x8e\x39\x7a\x4e\xcd\x34\x4d\x2f\x31\xe4\x99\x7a\xeb\xca\x8d\x73\xe4\x84\xdb\x2e\x57\x0f\x65\x68\x2d\xd6\x2b\x1f\xce\x21\x65\x32\xa1\xd8\xe2\x92\x9e\xee\xb2\x82\xd8\x97\x6d\x19\xc5\x4c\xe5\x0b\xaa\x30\x1a\x4e\xe8\xce\x78\xdd\x17\xdc\x0f\x68\xeb\x3f\x4f\xdc\x93\xe3\xfc\x8f\x93\xb7\x0d\xd5\x33\xb2\xd7\xd1\x28\x41\x4d\xb4\x7d\x3c\x4a\xdc\x5f\x38\xe4\x61\x74\x27\x4e\x36\x86\x63\x9d\x9e\x24\xef\x56\x10\x87\x71\xce\x6a\xf4\x5b\x63\xef\x80\x9b\xff\x33\x13\xf7\xef\x00\x00\x00\xff\xff\x3b\x19\x5f\xba\x7e\x10\x00\x00")

func dashboardJsBytes() ([]byte, error) {
	return bindataRead(
		_dashboardJs,
		"dashboard.js",
	)
}

func dashboardJs() (*asset, error) {
	bytes, err := dashboardJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dashboard.js", size: 4222, mode: os.FileMode(436), modTime: time.Unix(1455465497, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x4f\x4f\xe3\x3e\x10\xbd\xf3\x29\xfc\xf3\x05\x90\x88\xdd\xf2\xef\x87\xd8\xa4\x12\x0b\x3d\x70\x58\x81\x56\xbb\xd2\xee\xd1\xb1\xa7\x8d\x8b\x63\x07\x7b\x92\xd0\x6f\xbf\x76\xd3\x22\x40\x5a\xc4\x8a\xa8\x87\x8e\xc7\x9e\xf7\x32\xe3\x37\xe3\xfc\xbf\x9b\xbb\xeb\x1f\xbf\xef\xe7\xa4\xc2\xda\xcc\xf6\xf2\xf4\x47\x8c\xb0\xcb\x82\x82\xa5\xb3\x3d\x42\xf2\x0a\x84\x4a\x46\x34\x6b\x40\x41\x64\x25\x7c\x00\x2c\x68\x8b\x8b\xec\x82\xbe\xdc\xaa\x10\x9b\x0c\x1e\x5b\xdd\x15\xf4\x57\xf6\xf3\x2a\xbb\x76\x75\x23\x50\x97\x06\x28\x91\xce\x22\xd8\x18\x77\x3b\x2f\x40\x2d\xe1\x55\xa4\x15\x35\x14\xb4\xd3\xd0\x37\xce\xe3\x8b\xc3\xbd\x56\x58\x15\x0a\x3a\x2d\x21\xdb\x2c\x8e\x88\xb6\x1a\xb5\x30\x59\x90\xc2\x40\x31\x8d\x40\x03\x12\x6a\x34\x30\x9b\x63\x05\x9e\x5c\xdd\xdf\x06\x72\x23\x42\x55\x3a\xe1\x55\xce\x87\xbd\xed\x41\xa3\xed\x03\xf1\x60\x0a\x1a\x70\x6d\x20\x54\x00\x91\xb3\xf2\xb0\x28\x68\xca\x21\x5c\x72\x2e\x95\x5d\x05\x26\x8d\x6b\xd5\xc2\x08\x0f\x4c\xba\x9a\x8b\x95\x78\xe2\x46\x97\x81\x97\xce\x61\xe8\x05\xca\x8a\x9f\xb0\x13\x76\xce\x83\x11\x08\x83\x1b\xbd\x68\x58\xad\x2d\x93\x21\xec\xb2\x1c\x81\x72\x11\x6b\x92\x89\x1e\x82\xab\x81\x9f\xb2\x33\x36\xe1\x91\xe0\x95\xfb\x05\xeb\x40\x1b\xa4\xd7\x0d\x92\xe0\xe5\x87\x69\x3c\x08\x89\x7c\xc2\xa6\xa7\xec\xff\x61\xc1\x56\x11\x30\xe7\x03\xd6\x6c\x44\xe0\x4c\xb9\x7a\x24\xf0\x52\x94\x60\x32\xe9\x3c\xf0\x33\x76\xc1\x8e\x4f\x78\xe9\x5d\x1f\xc0\x6f\x4a\x32\x0e\xc7\xea\xb1\x05\xbf\xe6\xc7\x6c\xca\xa6\xdb\xc5\x88\xe8\x75\xbc\x3f\x9b\x6a\x9d\x08\xa6\xec\x78\xe7\x18\x8f\x01\x7b\x8d\x08\x3e\x7b\x16\xe9\x56\xba\xab\xf0\x46\xb7\x6f\xe9\x72\xbe\x1b\x02\x79\xe9\xd4\x9a\x6c\x24\x5c\xd0\x46\x28\xa5\xed\xf2\x92\x9c\x9f\x36\x4f\x64\x92\x7e\x3b\xb9\x2b\xdd\x11\xad\x0a\xba\xed\xe3\x04\x17\x5d\x6f\x54\x89\xeb\x26\xa2\x20\x3c\xe1\x70\x7d\x74\xc8\x86\xc7\xaf\x6e\x9c\x8d\x61\x81\x43\x6a\x66\x68\xdf\x53\xc9\x07\x50\xb0\x45\xe7\xe3\xc4\xf8\x1c\x4a\xe3\x5d\xa7\x55\x54\xd4\xa7\x50\x42\x5b\xa6\xc3\xe5\x67\x71\x6a\xe1\x1f\xe0\xbd\xd6\xfc\x1b\x86\xda\x0d\xc5\x7f\x89\x1d\xb6\x09\xf9\x9e\xda\xf6\xe6\xee\x1b\xf3\x60\x63\x29\x0e\xf2\xe7\x11\x4b\x44\xa3\x5b\x1f\xe7\x1b\x8f\x06\xef\x26\x94\xcf\x8e\x88\x72\xb2\xdd\x88\x78\x09\x38\x37\x90\xcc\xaf\xeb\x5b\x75\xb0\xbf\xd5\xc5\xfe\xe1\xe1\x97\x81\xf8\x95\xda\x92\xc8\xe2\x63\xc4\x87\x47\xe9\x4f\x00\x00\x00\xff\xff\xa6\xfb\x3c\xdf\xa5\x06\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 1701, mode: os.FileMode(436), modTime: time.Unix(1455465483, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"components/ethereum.js": componentsEthereumJs,
	"components/market.js": componentsMarketJs,
	"components/provider.js": componentsProviderJs,
	"components/subscriber.js": componentsSubscriberJs,
	"components/tutorial.js": componentsTutorialJs,
	"dashboard.js": dashboardJs,
	"index.html": indexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"components": &bintree{nil, map[string]*bintree{
		"ethereum.js": &bintree{componentsEthereumJs, map[string]*bintree{}},
		"market.js": &bintree{componentsMarketJs, map[string]*bintree{}},
		"provider.js": &bintree{componentsProviderJs, map[string]*bintree{}},
		"subscriber.js": &bintree{componentsSubscriberJs, map[string]*bintree{}},
		"tutorial.js": &bintree{componentsTutorialJs, map[string]*bintree{}},
	}},
	"dashboard.js": &bintree{dashboardJs, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

